[  {    "type": "post",    "url": "/api/actionlog/addlog",    "title": "Create Log of ActionLog",    "group": "ActionLog",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "contentId",            "description": "<p>Content ID *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>Content Type *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "action",            "description": "<p>Content Action *</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"contentId\" : \"\",\n     \"type\" : \"\",\n     \"action\" : \"\"\n}",          "type": "json"        },        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Create Log of ActionLog successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/actionlog/addlog"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ActionLogController.ts",    "groupTitle": "ActionLog",    "name": "PostApiActionlogAddlog"  },  {    "type": "post",    "url": "/api/actionlog/search",    "title": "Search ActionLog API",    "group": "ActionLog",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get actionLog search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"trendingScore\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/actionlog/search"      }    ],    "error": {      "examples": [        {          "title": "actionLog error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ActionLogController.ts",    "groupTitle": "ActionLog",    "name": "PostApiActionlogSearch"  },  {    "type": "post",    "url": "/api/admin/actionlog/addlog",    "title": "Create Log of ActionLog",    "group": "ActionLog",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "contentId",            "description": "<p>Content ID *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "type",            "description": "<p>Content Type *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "action",            "description": "<p>Content Action *</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"contentId\" : \"\",\n     \"type\" : \"\",\n     \"action\" : \"\"\n}",          "type": "json"        },        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Create Log of ActionLog successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/actionlog/addlog"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminActionLogController.ts",    "groupTitle": "ActionLog",    "name": "PostApiAdminActionlogAddlog"  },  {    "type": "post",    "url": "/api/admin/actionlog/search",    "title": "Search ActionLog API",    "group": "ActionLog",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get actionLog search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"trendingScore\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/actionlog/search"      }    ],    "error": {      "examples": [        {          "title": "actionLog error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminActionLogController.ts",    "groupTitle": "ActionLog",    "name": "PostApiAdminActionlogSearch"  },  {    "type": "get",    "url": "/api/activity/:id",    "title": "Pageuser Find activity API",    "group": "Activity",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n     {\n     \"message\": \"Successfully get activity Details\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n     }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/activity/:id"      }    ],    "error": {      "examples": [        {          "title": "activity error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ActivityNewsController.ts",    "groupTitle": "Activity",    "name": "GetApiActivityId"  },  {    "type": "post",    "url": "/api/activity/search",    "title": "Pageuser Search activity API",    "group": "Activity",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get activity search\",\n   \"data\":{\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/activity/search"      }    ],    "error": {      "examples": [        {          "title": "activity error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ActivityNewsController.ts",    "groupTitle": "Activity",    "name": "PostApiActivitySearch"  },  {    "type": "post",    "url": "/api/admin/config/",    "title": "Create Config API",    "group": "AdminConfig",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name *</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "value",            "description": "<p>value</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>type as a value class type such as boolean, string, integer *</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"value\" : \"\",\n     \"type\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New config is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/config/"      }    ],    "error": {      "examples": [        {          "title": "config error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminConfigController.ts",    "groupTitle": "AdminConfig",    "name": "PostApiAdminConfig"  },  {    "type": "delete",    "url": "/api/admin/debate/:debateId/comment/:id",    "title": "Delete Debate Comment",    "group": "AdminDebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"debateId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted Admin Debate Comment.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/:debateId/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateCommentController.ts",    "groupTitle": "AdminDebateComment",    "name": "DeleteApiAdminDebateDebateidCommentId"  },  {    "type": "get",    "url": "/api/admin/debate/:debateId/comment/:id",    "title": "Find Debate Comment",    "group": "AdminDebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find Admin Debate Comment Successfully\",\n     \"data\":{\n     \"id\" : \"\",\n     \"debateId\" : \"\",\n     \"comment\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"createdBy\" : \"\",\n     \"createdDate\" : \"\",\n     \"createdTime\" : \"\",\n     \"modifiedDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/:debateId/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "Admin Debate Comment Error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateCommentController.ts",    "groupTitle": "AdminDebateComment",    "name": "GetApiAdminDebateDebateidCommentId"  },  {    "type": "post",    "url": "/api/admin/debate/:debateId/comment/search",    "title": "Search Debate Comment",    "group": "AdminDebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"debateId\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"dislikeCount\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search Admin Debate Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/:debateId/comment/search"      }    ],    "error": {      "examples": [        {          "title": "Admin Debate Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateCommentController.ts",    "groupTitle": "AdminDebateComment",    "name": "PostApiAdminDebateDebateidCommentSearch"  },  {    "type": "put",    "url": "/api/admin/debate/:debateId/comment/:id/approve",    "title": "Approve Debate Comment",    "group": "AdminDebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Approve Debate Comment.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/:debateId/comment/:id/approve"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateCommentController.ts",    "groupTitle": "AdminDebateComment",    "name": "PutApiAdminDebateDebateidCommentIdApprove"  },  {    "type": "put",    "url": "/api/admin/debate/:debateId/comment/:id/unapprove",    "title": "Unapprove Debate Comment",    "group": "AdminDebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Unpprove Debate Comment.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/:debateId/comment/:id/unapprove"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateCommentController.ts",    "groupTitle": "AdminDebateComment",    "name": "PutApiAdminDebateDebateidCommentIdUnapprove"  },  {    "type": "delete",    "url": "/api/admin/debate/:id",    "title": "Delete Admin Debate",    "group": "AdminDebate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted Admin Debate.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/:id"      }    ],    "error": {      "examples": [        {          "title": "Admin Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateController.ts",    "groupTitle": "AdminDebate",    "name": "DeleteApiAdminDebateId"  },  {    "type": "get",    "url": "/api/admin/debate/:id",    "title": "Find Admin Debate",    "group": "AdminDebate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find Admin Debate Successfully\",\n     \"data\":{\n     \"id\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"createdBy\" : \"\",\n     \"createdDate\" : \"\",\n     \"createdTime\" : \"\",\n     \"modifiedDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/:id"      }    ],    "error": {      "examples": [        {          "title": "Admin debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateController.ts",    "groupTitle": "AdminDebate",    "name": "GetApiAdminDebateId"  },  {    "type": "post",    "url": "/api/admin/debate/log/search",    "title": "Search debate log",    "group": "AdminDebate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get debate list\",\n        \"data\":{\n                 \"id\" : \"\",\n                 \"title\" : \"\",\n                 \"title\" : \"\",\n                 \"content\" : \"\",\n                 \"approveUserId\" : \"\",\n                 \"approveDate\" : \"\",\n                 \"likeCount\" : \"\",\n                 \"dislikeCount\" : \"\",\n                 \"endDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/log/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateController.ts",    "groupTitle": "AdminDebate",    "name": "PostApiAdminDebateLogSearch"  },  {    "type": "post",    "url": "/api/admin/debate/pin",    "title": "Pin Debate",    "group": "AdminDebate",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "data",            "description": "<p>{debateId, pinOrdering}</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"data\" :\n         [\n             {\n                 \"debateId\" : \"\",\n                 \"pinOrdering\" : \"\",\n             },\n             {\n                 \"debateId\" : \"\",\n                 \"pinOrdering\" : \"\",\n             },\n         ]\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Pin Debate Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/pin"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateController.ts",    "groupTitle": "AdminDebate",    "name": "PostApiAdminDebatePin"  },  {    "type": "post",    "url": "/api/admin/debate/search",    "title": "Search Debate",    "group": "AdminDebate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search Admin Debate Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/debate/search"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminDebateController.ts",    "groupTitle": "AdminDebate",    "name": "PostApiAdminDebateSearch"  },  {    "type": "delete",    "url": "/api/admin/pageslide/:id",    "title": "DeleteMainPageSlide",    "group": "AdminMainPageSlide",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted Page Slide.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pageslide/:id"      }    ],    "error": {      "examples": [        {          "title": "pageSlideDelete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageSlideController.ts",    "groupTitle": "AdminMainPageSlide",    "name": "DeleteApiAdminPageslideId"  },  {    "type": "get",    "url": "/api/admin/pageslide/:id",    "title": "FindMainPageSlide",    "group": "AdminMainPageSlide",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get Page Slide Details\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pageslide/:id"      }    ],    "error": {      "examples": [        {          "title": "Page Slide error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageSlideController.ts",    "groupTitle": "AdminMainPageSlide",    "name": "GetApiAdminPageslideId"  },  {    "type": "post",    "url": "/api/admin/pageslide",    "title": "Create MainPageSlide",    "group": "AdminMainPageSlide",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "videoUrl",            "description": "<p>videoUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "imageUrl",            "description": "<p>imageUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "ordering",            "description": "<p>ordering</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "delayMilisec",            "description": "<p>delayMilisec</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isAutoPlay",            "description": "<p>isAutoPlay</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"videoUrl\" : \"\",\n     \"imageUrl\" : \"\",\n     \"ordering\" : \"\",\n     \"delayMilisec\" : \"\",\n     \"isAutoPlay\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New MainPageSlide is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pageslide"      }    ],    "error": {      "examples": [        {          "title": "MainPageSlide error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageSlideController.ts",    "groupTitle": "AdminMainPageSlide",    "name": "PostApiAdminPageslide"  },  {    "type": "post",    "url": "/api/admin/pageslide/log/search",    "title": "SearchMainPageSlideLog",    "group": "AdminMainPageSlide",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get pageslide list\",\n        \"data\":{\n                 \"id\" : \"\",\n                 \"title\" : \"\",\n                 \"title\" : \"\",\n                 \"content\" : \"\",\n                 \"approveUserId\" : \"\",\n                 \"approveDate\" : \"\",\n                 \"likeCount\" : \"\",\n                 \"dislikeCount\" : \"\",\n                 \"endDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pageslide/log/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageSlideController.ts",    "groupTitle": "AdminMainPageSlide",    "name": "PostApiAdminPageslideLogSearch"  },  {    "type": "post",    "url": "/api/admin/pageslide/search",    "title": "SearchMainPageSlide",    "group": "AdminMainPageSlide",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get Page Slide search\",\n   \"data\":{\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pageslide/search"      }    ],    "error": {      "examples": [        {          "title": "Page Slide error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageSlideController.ts",    "groupTitle": "AdminMainPageSlide",    "name": "PostApiAdminPageslideSearch"  },  {    "type": "put",    "url": "/api/admin/pageslide/:id",    "title": "EditMainPageSlide",    "group": "AdminMainPageSlide",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "videoUrl",            "description": "<p>videoUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "imageUrl",            "description": "<p>imageUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "ordering",            "description": "<p>ordering</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "delayMilisec",            "description": "<p>delayMilisec</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isAutoPlay",            "description": "<p>isAutoPlay</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"videoUrl\" : \"\",\n     \"imageUrl\" : \"\",\n     \"ordering\" : \"\",\n     \"delayMilisec\" : \"\",\n     \"isAutoPlay\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit Page Slide.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pageslide/:id"      }    ],    "error": {      "examples": [        {          "title": "Page Slide error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageSlideController.ts",    "groupTitle": "AdminMainPageSlide",    "name": "PutApiAdminPageslideId"  },  {    "type": "put",    "url": "/api/admin/pageslide/ordering",    "title": "orderingPageSlide",    "group": "AdminMainPageSlide",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "videoUrl",            "description": "<p>videoUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "imageUrl",            "description": "<p>imageUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "ordering",            "description": "<p>ordering</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "delayMilisec",            "description": "<p>delayMilisec</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isAutoPlay",            "description": "<p>isAutoPlay</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"videoUrl\" : \"\",\n     \"imageUrl\" : \"\",\n     \"ordering\" : \"\",\n     \"delayMilisec\" : \"\",\n     \"isAutoPlay\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit Page Slide.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pageslide/ordering orderingPageSlide"      }    ],    "error": {      "examples": [        {          "title": "Page Slide error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageSlideController.ts",    "groupTitle": "AdminMainPageSlide",    "name": "PutApiAdminPageslideOrdering"  },  {    "type": "delete",    "url": "/api/admin/pagevideo/:id",    "title": "Delete pagevideo API",    "group": "AdminMainPageVideo",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted pagevideo.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pagevideo/:id"      }    ],    "error": {      "examples": [        {          "title": "pagevideoDelete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageVideoController.ts",    "groupTitle": "AdminMainPageVideo",    "name": "DeleteApiAdminPagevideoId"  },  {    "type": "get",    "url": "/api/admin/pagevideo/:id",    "title": "Find pagevideo API",    "group": "AdminMainPageVideo",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get pagevideo Details\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pagevideo/:id"      }    ],    "error": {      "examples": [        {          "title": "pagevideo error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageVideoController.ts",    "groupTitle": "AdminMainPageVideo",    "name": "GetApiAdminPagevideoId"  },  {    "type": "post",    "url": "/api/admin/pagevideo/",    "title": "Create pagevideo API",    "group": "AdminMainPageVideo",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>url</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "tagline",            "description": "<p>tagline</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "ordering",            "description": "<p>ordering</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"url\" : \"\",\n     \"tagline\" : \"\",\n     \"ordering\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New pagevideo is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pagevideo/"      }    ],    "error": {      "examples": [        {          "title": "pagevideo error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageVideoController.ts",    "groupTitle": "AdminMainPageVideo",    "name": "PostApiAdminPagevideo"  },  {    "type": "post",    "url": "/api/admin/pagevideo/log/search",    "title": "Search pagevideo log api",    "group": "AdminMainPageVideo",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get pagevideo list\",\n        \"data\":{\n                 \"id\" : \"\",\n                 \"title\" : \"\",\n                 \"title\" : \"\",\n                 \"content\" : \"\",\n                 \"approveUserId\" : \"\",\n                 \"approveDate\" : \"\",\n                 \"likeCount\" : \"\",\n                 \"dislikeCount\" : \"\",\n                 \"endDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pagevideo/log/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageVideoController.ts",    "groupTitle": "AdminMainPageVideo",    "name": "PostApiAdminPagevideoLogSearch"  },  {    "type": "post",    "url": "/api/admin/pagevideo/search",    "title": "Search pagevideo API",    "group": "AdminMainPageVideo",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get pagevideo search\",\n   \"data\":{\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pagevideo/search"      }    ],    "error": {      "examples": [        {          "title": "pagevideo error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageVideoController.ts",    "groupTitle": "AdminMainPageVideo",    "name": "PostApiAdminPagevideoSearch"  },  {    "type": "put",    "url": "/api/admin/pagevideo/:id",    "title": "Edit pagevideo API",    "group": "AdminMainPageVideo",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>url</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "tagline",            "description": "<p>tagline</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "ordering",            "description": "<p>ordering</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"url\" : \"\",\n     \"tagline\" : \"\",\n     \"ordering\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit pagevideo.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/pagevideo/:id"      }    ],    "error": {      "examples": [        {          "title": "pagevideo error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminMainPageVideoController.ts",    "groupTitle": "AdminMainPageVideo",    "name": "PutApiAdminPagevideoId"  },  {    "type": "delete",    "url": "/api/admin/content/:id",    "title": "Delete PageContent  API",    "group": "AdminPageContent",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n     {\n     \"message\": \"Successfully deleted content.\",\n     \"status\": \"1\"\n     }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/content/:id"      }    ],    "error": {      "examples": [        {          "title": "contentDelete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPageContentController.ts",    "groupTitle": "AdminPageContent",    "name": "DeleteApiAdminContentId"  },  {    "type": "get",    "url": "/api/admin/content/:id",    "title": "Find PageContent API",    "group": "AdminPageContent",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get pageContent Details\",\n\"data\":{\n\"name\" : \"\",\n\"description\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/content/:id"      }    ],    "error": {      "examples": [        {          "title": "content error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPageContentController.ts",    "groupTitle": "AdminPageContent",    "name": "GetApiAdminContentId"  },  {    "type": "post",    "url": "/api/admin/content/",    "title": "Create PageContent API",    "group": "AdminPageContent",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>content</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagContent",            "description": "<p>metaTagContent</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagKeyword",            "description": "<p>metaTagKeyword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagTitle",            "description": "<p>metaTagTitle</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isDraft",            "description": "<p>isDraft (0=false, 1=true)</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "coverImage",            "description": "<p>coverImage</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "videoUrl",            "description": "<p>videoUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "link",            "description": "<p>link</p>"          },          {            "group": "Request body",            "type": "String[]",            "optional": false,            "field": "tagId",            "description": "<p>tagId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "imageUrl",            "description": "<p>imageUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"metaTagContent\" : \"\",\n     \"metaTagKeyword\" : \"\",\n     \"metaTagTitle\" : \"\",\n     \"coverImage\" : \"\",\n     \"videoUrl\" : \"\",\n     \"link\" : \"\",\n     \"tagId\" : \"\",\n     \"imageUrl\" : \"\",\n     \"description\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Content is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/content/"      }    ],    "error": {      "examples": [        {          "title": "pageContent error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPageContentController.ts",    "groupTitle": "AdminPageContent",    "name": "PostApiAdminContent"  },  {    "type": "post",    "url": "/api/admin/content/search",    "title": "Search content API",    "group": "AdminPageContent",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get pageContent search\",\n   \"data\":{\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/content/search"      }    ],    "error": {      "examples": [        {          "title": "pageContent error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPageContentController.ts",    "groupTitle": "AdminPageContent",    "name": "PostApiAdminContentSearch"  },  {    "type": "put",    "url": "/api/admin/content/:id",    "title": "Edit PageContent API",    "group": "AdminPageContent",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>PageContent title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>content</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagContent",            "description": "<p>metaTagContent</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagKeyword",            "description": "<p>metaTagKeyword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagTitle",            "description": "<p>metaTagTitle</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isDraft",            "description": "<p>isDraft (0=false, 1=true)</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "coverImage",            "description": "<p>coverImage</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "videoUrl",            "description": "<p>videoUrl</p>"          },          {            "group": "Request body",            "type": "String[]",            "optional": false,            "field": "tagId",            "description": "<p>tagId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "link",            "description": "<p>link</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "imageUrl",            "description": "<p>imageUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"metaTagContent\" : \"\",\n     \"metaTagKeyword\" : \"\",\n     \"metaTagTitle\" : \"\",\n     \"isDraft\" : \"\",\n     \"coverImage\" : \"\",\n     \"videoUrl\" : \"\",\n     \"tagId\" : \"\",\n     \"link\" : \"\",\n     \"imageUrl\" : \"\",\n     \"description\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit room.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/content/:id"      }    ],    "error": {      "examples": [        {          "title": "pageContent error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPageContentController.ts",    "groupTitle": "AdminPageContent",    "name": "PutApiAdminContentId"  },  {    "type": "delete",    "url": "/api/admin/partner/:id",    "title": "Delete partner API",    "group": "AdminPartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted partner.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/partner/:id"      }    ],    "error": {      "examples": [        {          "title": "partner Delete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPartnerController.ts",    "groupTitle": "AdminPartner",    "name": "DeleteApiAdminPartnerId"  },  {    "type": "post",    "url": "/api/admin/partner/",    "title": "Create Partner API",    "group": "AdminPartner",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "link",            "description": "<p>link</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "logoUrl",            "description": "<p>logoUrl</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"link\" : \"\",\n     \"logoUrl\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New partner is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/partner/"      }    ],    "error": {      "examples": [        {          "title": "partner error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPartnerController.ts",    "groupTitle": "AdminPartner",    "name": "PostApiAdminPartner"  },  {    "type": "post",    "url": "/api/admin/partner/search",    "title": "Search partner API",    "group": "AdminPartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get partner search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"link\": \"\",\n   \"logo_url\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/partner/search"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPartnerController.ts",    "groupTitle": "AdminPartner",    "name": "PostApiAdminPartnerSearch"  },  {    "type": "put",    "url": "/api/admin/partner/:id",    "title": "Edit partner API",    "group": "AdminPartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>AdminPartner name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "link",            "description": "<p>link</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "logoUrl",            "description": "<p>logoUrl</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"link\" : \"\",\n     \"logoUrl\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit partner.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/partner/:id"      }    ],    "error": {      "examples": [        {          "title": "partner error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminPartnerController.ts",    "groupTitle": "AdminPartner",    "name": "PutApiAdminPartnerId"  },  {    "type": "delete",    "url": "/api/admin/proposal/:id",    "title": "Admin Delete Proposal",    "group": "AdminProposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"proposalId\" : \"\",\n     \"roomId\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"reqSupporter\" : \"\",\n     \"approveUserId\" : \"\",\n     \"approveDate\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"endDate\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"User is deleted successfully\",\n      \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:id"      }    ],    "error": {      "examples": [        {          "title": "deleteProposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "DeleteApiAdminProposalId"  },  {    "type": "get",    "url": "/api/admin/proposal/:id",    "title": "Admin proposal Find API",    "group": "AdminProposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get proposal Find\",\n\"data\":{\n\"name\" : \"\",\n\"description\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:id"      }    ],    "error": {      "examples": [        {          "title": "proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "GetApiAdminProposalId"  },  {    "type": "post",    "url": "/api/admin/proposal",    "title": "Admin Create Proposal API",    "group": "AdminProposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "roomId",            "description": "<p>Room ID *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>Proposal title *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "content",            "description": "<p>Proposal Content *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "endDate",            "description": "<p>Date YYYY-MM-DD</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "debateTag",            "description": "<p>Debatetag</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"roomId\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"reqSupporter\" : \"\",\n     \"approveUserId\" : \"\",\n     \"approveDate\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"endDate\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Proposal is created successfully\",\n     \"status\": \"1\"\n     \"data\": {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal"      }    ],    "error": {      "examples": [        {          "title": "Proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "PostApiAdminProposal"  },  {    "type": "post",    "url": "/api/admin/proposal/log/search",    "title": "Admin Proposal Search API",    "group": "AdminProposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get proposal list\",\n        \"data\":{\n                 \"id\" : \"\",\n                 \"title\" : \"\",\n                 \"title\" : \"\",\n                 \"content\" : \"\",\n                 \"approveUserId\" : \"\",\n                 \"approveDate\" : \"\",\n                 \"likeCount\" : \"\",\n                 \"dislikeCount\" : \"\",\n                 \"endDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/log/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "PostApiAdminProposalLogSearch"  },  {    "type": "post",    "url": "/api/admin/proposal/pin",    "title": "Pin Proposal",    "group": "AdminProposal",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "data",            "description": "<p>{proposalId, pinOrdering}</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"data\" :\n         [\n             {\n                 \"proposalId\" : \"\",\n                 \"pinOrdering\" : \"\",\n             },\n             {\n                 \"proposalId\" : \"\",\n                 \"pinOrdering\" : \"\",\n             },\n         ]\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Pin Proposal Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/pin"      }    ],    "error": {      "examples": [        {          "title": "Proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "PostApiAdminProposalPin"  },  {    "type": "Post",    "url": "/api/admin/proposal/search",    "title": "Admin Proposal Search API",    "group": "AdminProposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get proposal list\",\n        \"data\":{\n                 \"id\" : \"\",\n                 \"title\" : \"\",\n                 \"title\" : \"\",\n                 \"content\" : \"\",\n                 \"approveUserId\" : \"\",\n                 \"approveDate\" : \"\",\n                 \"likeCount\" : \"\",\n                 \"dislikeCount\" : \"\",\n                 \"endDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "PostApiAdminProposalSearch"  },  {    "type": "put",    "url": "/api/admin/proposal/:id",    "title": "Admin Edit Proposal API",    "group": "AdminProposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "roomId",            "description": "<p>Room ID *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>Proposal title *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "content",            "description": "<p>Proposal content *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "endDate",            "description": "<p>Date YYYY-MM-DD</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "debateTag",            "description": "<p>Debatetag</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"roomId\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"reqSupporter\" : \"\",\n     \"approveUserId\" : \"\",\n     \"approveDate\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"endDate\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is updated successfully\",\n     \"status\": \"1\"\n     \"data\" : {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:id"      }    ],    "error": {      "examples": [        {          "title": "updateProposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "PutApiAdminProposalId"  },  {    "type": "Put",    "url": "/api/admin/proposal/:id/approve",    "title": "Admin Approve Proposal API",    "group": "AdminProposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{ \n     \"message\": \"Proposal is approve successfully\",\n      \"status\": \"1\"\n       \"data\" : {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:id/approve"      }    ],    "error": {      "examples": [        {          "title": "approveProposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "PutApiAdminProposalIdApprove"  },  {    "type": "Put",    "url": "/api/admin/proposal/:id/unapprove",    "title": "Admin unapprove Proposal API",    "group": "AdminProposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is approve successfully\",\n     \"status\": \"1\"\n     \"data\" : {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:id/unapprove"      }    ],    "error": {      "examples": [        {          "title": "approveProposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalController.ts",    "groupTitle": "AdminProposal",    "name": "PutApiAdminProposalIdUnapprove"  },  {    "type": "delete",    "url": "/api/admin/relatetag/:name",    "title": "Delete relateTag API",    "group": "AdminRelateTag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted relateTag.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/relatetag/:name"      }    ],    "error": {      "examples": [        {          "title": "RelateTag Delete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRelateTagController.ts",    "groupTitle": "AdminRelateTag",    "name": "DeleteApiAdminRelatetagName"  },  {    "type": "get",    "url": "/api/admin/relatetag/topscore",    "title": "Get Top Score relateTag API",    "group": "AdminRelateTag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully Top Score relateTag.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/relatetag/topscore"      }    ],    "error": {      "examples": [        {          "title": "RelateTag Top Score error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRelateTagController.ts",    "groupTitle": "AdminRelateTag",    "name": "GetApiAdminRelatetagTopscore"  },  {    "type": "post",    "url": "/api/admin/relatetag/",    "title": "Create RelateTag API",    "group": "AdminRelateTag",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name *</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "trendingScore",            "description": "<p>trendingScore</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"trendingScore\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New relateTag is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/relatetag/"      }    ],    "error": {      "examples": [        {          "title": "relateTag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRelateTagController.ts",    "groupTitle": "AdminRelateTag",    "name": "PostApiAdminRelatetag"  },  {    "type": "post",    "url": "/api/admin/relatetag/search",    "title": "Search relateTag API",    "group": "AdminRelateTag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get relateTag search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"count\": \"\",\n   \"type\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/relatetag/search"      }    ],    "error": {      "examples": [        {          "title": "relateTag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRelateTagController.ts",    "groupTitle": "AdminRelateTag",    "name": "PostApiAdminRelatetagSearch"  },  {    "type": "put",    "url": "/api/admin/relatetag/:name",    "title": "Edit relateTag API",    "group": "AdminRelateTag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name *</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "trendingScore",            "description": "<p>trendingScore</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"trendingScore\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit relateTag.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/relatetag/:name"      }    ],    "error": {      "examples": [        {          "title": "relateTag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRelateTagController.ts",    "groupTitle": "AdminRelateTag",    "name": "PutApiAdminRelatetagName"  },  {    "type": "delete",    "url": "/api/admin/room/:id",    "title": "Delete Room API",    "group": "AdminRoom",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted Room.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/room/:id"      }    ],    "error": {      "examples": [        {          "title": "roomDelete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRoomController.ts",    "groupTitle": "AdminRoom",    "name": "DeleteApiAdminRoomId"  },  {    "type": "get",    "url": "/api/admin/room/:id",    "title": "Find Room API",    "group": "AdminRoom",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n     {\n     \"message\": \"Successfully get room Details\",\n     \"data\":{\n     \"name\" : \"\",\n     \"description\" : \"\",\n     }\n     \"status\": \"1\"\n     }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/room/:id"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRoomController.ts",    "groupTitle": "AdminRoom",    "name": "GetApiAdminRoomId"  },  {    "type": "post",    "url": "/api/admin/room/",    "title": "Create Room API",    "group": "AdminRoom",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "color",            "description": "<p>color</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"description\" : \"\",\n     \"color\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Room is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/room/"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRoomController.ts",    "groupTitle": "AdminRoom",    "name": "PostApiAdminRoom"  },  {    "type": "post",    "url": "/api/admin/room/search",    "title": "Search Room API",    "group": "AdminRoom",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get room search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/room/search"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRoomController.ts",    "groupTitle": "AdminRoom",    "name": "PostApiAdminRoomSearch"  },  {    "type": "put",    "url": "/api/admin/room/:id",    "title": "Edit Room API",    "group": "AdminRoom",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Room name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "color",            "description": "<p>color</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"description\" : \"\",\n     \"color\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit room.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/room/:id"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRoomController.ts",    "groupTitle": "AdminRoom",    "name": "PutApiAdminRoomId"  },  {    "type": "post",    "url": "/api/admin/tagappearance/",    "title": "Create TagAppearance API",    "group": "AdminTagAppearance",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "tag",            "description": "<p>tag *</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "contentId",            "description": "<p>contentId *</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>type *</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "countAppearance",            "description": "<p>countAppearance</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"tag\" : \"\",\n     \"contentId\" : \"\",\n     \"type\" : \"\",\n     \"countAppearance\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New tagAppearance is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/tagappearance/"      }    ],    "error": {      "examples": [        {          "title": "tagAppearance error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminTagAppearanceController.ts",    "groupTitle": "AdminTagAppearance",    "name": "PostApiAdminTagappearance"  },  {    "type": "delete",    "url": "/api/admin/tag/:id",    "title": "Delete Tag API",    "group": "AdminTag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted tag.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/tag/:id"      }    ],    "error": {      "examples": [        {          "title": "tagDelete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminTagController.ts",    "groupTitle": "AdminTag",    "name": "DeleteApiAdminTagId"  },  {    "type": "get",    "url": "/api/admin/tag/:id",    "title": "Find Tag API",    "group": "AdminTag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get Tag Details\",\n\"data\":{\n\"name\" : \"\",\n\"description\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/tag/:id"      }    ],    "error": {      "examples": [        {          "title": "tag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminTagController.ts",    "groupTitle": "AdminTag",    "name": "GetApiAdminTagId"  },  {    "type": "post",    "url": "/api/admin/tag/",    "title": "Create Tag API",    "group": "AdminTag",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"description\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Tag is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/tag/"      }    ],    "error": {      "examples": [        {          "title": "tag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminTagController.ts",    "groupTitle": "AdminTag",    "name": "PostApiAdminTag"  },  {    "type": "post",    "url": "/api/admin/tag/search",    "title": "Search Tag API",    "group": "AdminTag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get room search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/room/search"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminTagController.ts",    "groupTitle": "AdminTag",    "name": "PostApiAdminTagSearch"  },  {    "type": "put",    "url": "/api/admin/tag/:id",    "title": "Edit Tag API",    "group": "AdminTag",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Tag name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"description\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit tag.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/tag/:id"      }    ],    "error": {      "examples": [        {          "title": "tag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminTagController.ts",    "groupTitle": "AdminTag",    "name": "PutApiAdminTagId"  },  {    "type": "delete",    "url": "/api/admin/proposal/:proposal_id/comment/:id",    "title": "Delete Proposal Comment API",    "group": "Admin_Proposal_Comment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Delete VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:proposal_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalCommentController.ts",    "groupTitle": "Admin_Proposal_Comment",    "name": "DeleteApiAdminProposalProposal_idCommentId"  },  {    "type": "get",    "url": "/api/admin/proposal/:proposal_id/comment/:id",    "title": "Admin Proposal Comment Find API",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "group": "Admin_Proposal_Comment",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get proposal comment Find\",\n\"data\":{\n\"name\" : \"\",\n\"description\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:proposal_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalCommentController.ts",    "groupTitle": "Admin_Proposal_Comment",    "name": "GetApiAdminProposalProposal_idCommentId"  },  {    "type": "Post",    "url": "/api/admin/:proposal_id/comment/search",    "title": "Proposal Comment Search API",    "group": "Admin_Proposal_Comment",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get proposal list\",\n     \"data\":{\n             \"id\" : \"\",\n             \"roomId\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"endDate\" : \"\", \n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:proposal_id/comment/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalCommentController.ts",    "groupTitle": "Admin_Proposal_Comment",    "name": "PostApiAdminProposal_idCommentSearch"  },  {    "type": "Put",    "url": "/api/admin/:proposal_id/comment/:id/approve",    "title": "Proposal Comment Approve API",    "group": "Admin_Proposal_Comment",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Success approve proposal Comment\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:proposal_id/comment/:id/approve"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalCommentController.ts",    "groupTitle": "Admin_Proposal_Comment",    "name": "PutApiAdminProposal_idCommentIdApprove"  },  {    "type": "Put",    "url": "/api/admin/:proposal_id/comment/:id/unapprove",    "title": "Proposal Comment Unapprove API",    "group": "Admin_Proposal_Comment",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Success unapprove proposal Comment\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/proposal/:proposal_id/comment/:id/unapprove"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminProposalCommentController.ts",    "groupTitle": "Admin_Proposal_Comment",    "name": "PutApiAdminProposal_idCommentIdUnapprove"  },  {    "type": "delete",    "url": "/api/admin/vote/:vote_id/comment/:id",    "title": "Delete API",    "group": "Admin_VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Delete VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/:vote_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteCommentController.ts",    "groupTitle": "Admin_VoteComment",    "name": "DeleteApiAdminVoteVote_idCommentId"  },  {    "type": "get",    "url": "/api/admin/vote/:vote_id/comment/:id",    "title": "Find API",    "group": "Admin_VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/:vote_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteCommentController.ts",    "groupTitle": "Admin_VoteComment",    "name": "GetApiAdminVoteVote_idCommentId"  },  {    "type": "post",    "url": "/api/admin/vote/:voteId/comment/search",    "title": "Search API",    "group": "Admin_VoteComment",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/:vote_id/comment/search"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteCommentController.ts",    "groupTitle": "Admin_VoteComment",    "name": "PostApiAdminVoteVoteidCommentSearch"  },  {    "type": "put",    "url": "/api/admin/vote/:vote_id/comment/:id/approve",    "title": "Approve Vote Comment API",    "group": "Admin_VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Approve VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/:vote_id/comment/:id/approve"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteCommentController.ts",    "groupTitle": "Admin_VoteComment",    "name": "PutApiAdminVoteVote_idCommentIdApprove"  },  {    "type": "put",    "url": "/api/admin/vote/:vote_id/comment/:id/unapprove",    "title": "UnApprove Vote Comment API",    "group": "Admin_VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"UnApprove VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/:vote_id/comment/:id/unapprove"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteCommentController.ts",    "groupTitle": "Admin_VoteComment",    "name": "PutApiAdminVoteVote_idCommentIdUnapprove"  },  {    "type": "delete",    "url": "/api/admin/vote/:id",    "title": "Delete API",    "group": "Admin_Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Delete Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteController.ts",    "groupTitle": "Admin_Vote",    "name": "DeleteApiAdminVoteId"  },  {    "type": "get",    "url": "/api/admin/vote/:id",    "title": "Find API",    "group": "Admin_Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteController.ts",    "groupTitle": "Admin_Vote",    "name": "GetApiAdminVoteId"  },  {    "type": "post",    "url": "/api/admin/vote",    "title": "Create API",    "group": "Admin_Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "tagline",            "description": "<p>Tagline</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Content</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "proposalId",            "description": "<p>Proposal Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "roomId",            "description": "<p>Room Id</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "cover",            "description": "<p>cover</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "link",            "description": "<p>Link</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          },          {            "group": "Request body",            "type": "Date",            "optional": false,            "field": "endDate",            "description": "<p>End Date</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Create Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteController.ts",    "groupTitle": "Admin_Vote",    "name": "PostApiAdminVote"  },  {    "type": "post",    "url": "/api/admin/vote/search",    "title": "Search API",    "group": "Admin_Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/search"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteController.ts",    "groupTitle": "Admin_Vote",    "name": "PostApiAdminVoteSearch"  },  {    "type": "put",    "url": "/api/admin/vote/:id",    "title": "Update API",    "group": "Admin_Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "tagline",            "description": "<p>Tagline</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Content</p>"          },          {            "group": "Request body",            "type": "Boolean",            "optional": false,            "field": "isActive",            "description": "<p>Is Active</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "cover",            "description": "<p>Cover</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "link",            "description": "<p>Link</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          },          {            "group": "Request body",            "type": "Date",            "optional": false,            "field": "endDate",            "description": "<p>End Date</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Update Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/vote/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminVoteController.ts",    "groupTitle": "Admin_Vote",    "name": "PutApiAdminVoteId"  },  {    "type": "delete",    "url": "/api/admin/activity/:id",    "title": "Delete activity API",    "group": "Adminactivity",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted activity.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/activity/:id"      }    ],    "error": {      "examples": [        {          "title": "activityDelete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminActivityNewsController.ts",    "groupTitle": "Adminactivity",    "name": "DeleteApiAdminActivityId"  },  {    "type": "get",    "url": "/api/admin/activity/:id",    "title": "Find activity API",    "group": "Adminactivity",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get activity Details\",\n     \"data\":{\n     \"coverImageUrl\" : \"\",\n     \"coverVideoUrl\" : \"\",\n     \"startDate\" : \"\",\n     \"startTime\" : \"\",\n     \"endDate\" : \"\",\n     \"endTime\" : \"\",\n     \"latitude\" : \"\",\n     \"longitude\" : \"\",\n     \"placeName\" : \"\",\n     \"content\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/activity/:id"      }    ],    "error": {      "examples": [        {          "title": "activity error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminActivityNewsController.ts",    "groupTitle": "Adminactivity",    "name": "GetApiAdminActivityId"  },  {    "type": "post",    "url": "/api/admin/activity/",    "title": "Create activity API",    "group": "Adminactivity",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "coverImageUrl",            "description": "<p>coverImageUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "coverVideoUrl",            "description": "<p>coverVideoUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>title</p>"          },          {            "group": "Request body",            "type": "Date",            "optional": false,            "field": "startDateTime",            "description": "<p>startDateTime</p>"          },          {            "group": "Request body",            "type": "Date",            "optional": false,            "field": "endDateTime",            "description": "<p>endDateTime</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "latitude",            "description": "<p>latitude</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "longitude",            "description": "<p>longitude</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "placeName",            "description": "<p>placeName</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>content</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"coverImageUrl\" : \"\",\n     \"coverVideoUrl\" : \"\",\n     \"title\" : \"\",\n     \"startDateTime\" : \"\",\n     \"endDateTime\" : \"\",\n     \"latitude\" : \"\",\n     \"longitude\" : \"\",\n     \"placeName\" : \"\",\n     \"content\" : \"\",\n     \"description\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New activity is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/activity/"      }    ],    "error": {      "examples": [        {          "title": "activity error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminActivityNewsController.ts",    "groupTitle": "Adminactivity",    "name": "PostApiAdminActivity"  },  {    "type": "post",    "url": "/api/admin/activity/search",    "title": "Search activity API",    "group": "Adminactivity",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get activity search\",\n   \"data\":{\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/activity/search"      }    ],    "error": {      "examples": [        {          "title": "activity error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminActivityNewsController.ts",    "groupTitle": "Adminactivity",    "name": "PostApiAdminActivitySearch"  },  {    "type": "put",    "url": "/api/admin/activity/:id",    "title": "Edit activity API",    "group": "Adminactivity",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "coverImageUrl",            "description": "<p>coverImageUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "coverVideoUrl",            "description": "<p>coverVideoUrl</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>title</p>"          },          {            "group": "Request body",            "type": "Date",            "optional": false,            "field": "startDateTime",            "description": "<p>startDateTime</p>"          },          {            "group": "Request body",            "type": "Date",            "optional": false,            "field": "endDateTime",            "description": "<p>endDateTime</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "latitude",            "description": "<p>latitude</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "longitude",            "description": "<p>longitude</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "placeName",            "description": "<p>placeName</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>content</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>description</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"coverImageUrl\" : \"\",\n     \"coverVideoUrl\" : \"\",\n     \"startDateTime\" : \"\",\n     \"endDateTime\" : \"\",\n     \"latitude\" : \"\",\n     \"longitude\" : \"\",\n     \"placeName\" : \"\",\n     \"content\" : \"\",\n     \"description\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit activity.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/activity/:id"      }    ],    "error": {      "examples": [        {          "title": "activity error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminActivityNewsController.ts",    "groupTitle": "Adminactivity",    "name": "PutApiAdminActivityId"  },  {    "type": "delete",    "url": "/api/admin/config/:name",    "title": "Delete config API",    "group": "Adminpartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted config.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/config/:name"      }    ],    "error": {      "examples": [        {          "title": "Config Delete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminConfigController.ts",    "groupTitle": "Adminpartner",    "name": "DeleteApiAdminConfigName"  },  {    "type": "get",    "url": "/api/admin/config/:name",    "title": "Get config API",    "group": "Adminpartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted config.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/config/:name"      }    ],    "error": {      "examples": [        {          "title": "Config Delete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminConfigController.ts",    "groupTitle": "Adminpartner",    "name": "GetApiAdminConfigName"  },  {    "type": "get",    "url": "/api/admin/tagappearance/:name",    "title": "Get tagappearance API",    "group": "Adminpartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully fine tagAppearance.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/tagappearance/:name"      }    ],    "error": {      "examples": [        {          "title": "TagAppearance Fine error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminTagAppearanceController.ts",    "groupTitle": "Adminpartner",    "name": "GetApiAdminTagappearanceName"  },  {    "type": "post",    "url": "/api/admin/config/search",    "title": "Search config API",    "group": "Adminpartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get config search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"value\": \"\",\n   \"type\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/config/search"      }    ],    "error": {      "examples": [        {          "title": "config error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminConfigController.ts",    "groupTitle": "Adminpartner",    "name": "PostApiAdminConfigSearch"  },  {    "type": "post",    "url": "/api/admin/tagappearance/search",    "title": "Search tagAppearance API",    "group": "Adminpartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get tagAppearance search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"count\": \"\",\n   \"type\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/tagappearance/search"      }    ],    "error": {      "examples": [        {          "title": "tagAppearance error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminTagAppearanceController.ts",    "groupTitle": "Adminpartner",    "name": "PostApiAdminTagappearanceSearch"  },  {    "type": "put",    "url": "/api/admin/config/:name",    "title": "Edit config API",    "group": "Adminpartner",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name *</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "value",            "description": "<p>value</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "type",            "description": "<p>type as a value class type such as boolean, string, integer *</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"value\" : \"\",\n     \"type\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully edit config.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/config/:name"      }    ],    "error": {      "examples": [        {          "title": "config error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminConfigController.ts",    "groupTitle": "Adminpartner",    "name": "PutApiAdminConfigName"  },  {    "type": "delete",    "url": "/api/auth/delete-user/:id",    "title": "Delete User",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>UserId</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"User is deleted successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/delete-user/:id"      }    ],    "error": {      "examples": [        {          "title": "updateUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "DeleteApiAuthDeleteUserId"  },  {    "type": "get",    "url": "/api/auth/logout",    "title": "Log Out API",    "group": "Authentication",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully logout\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/logout"      }    ],    "error": {      "examples": [        {          "title": "Logout error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "GetApiAuthLogout"  },  {    "type": "get",    "url": "/api/auth/userlist",    "title": "User List API",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "count",            "description": "<p>count in number or boolean</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get user list\",\n     \"data\":\"{}\"\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/userlist"      }    ],    "error": {      "examples": [        {          "title": "User Profile error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "GetApiAuthUserlist"  },  {    "type": "post",    "url": "/api/auth/create-user",    "title": "Create User API",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>userName</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>address</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>avatar</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "avatarPath",            "description": "<p>avatarPath</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "deleteFlag",            "description": "<p>deleteFlag</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "isActive",            "description": "<p>isActive</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User First Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User Last Name</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "phoneNumber",            "description": "<p>User phoneNumber</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User Email-Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "userGroupId",            "description": "<p>User GroupId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"username\" : \"\",\n     \"password\" : \"\",\n     \"address\" : \"\",\n     \"avatar\" : \"\",\n     \"avatarPath\" : \"\",\n     \"deleteFlag\" : \"\",\n     \"isActive\" : \"\",\n     \"firstName\" : \"\",\n     \"lastName\" : \"\",\n     \"email\" : \"\",\n     \"userGroupId\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New User is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/create-user"      }    ],    "error": {      "examples": [        {          "title": "createUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostApiAuthCreateUser"  },  {    "type": "post",    "url": "/api/auth/edit-profile",    "title": "Edit Profile API",    "group": "Authentication",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>User username</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "phoneNumber",            "description": "<p>User phoneNumber</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "address",            "description": "<p>User address</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>User avatar</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"username\" : \"\",\n     \"email\" : \"\",\n     \"phoneNumber\" : \"\",\n     \"address\" : \"\",\n     \"avatar\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully updated User.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/edit-profile"      }    ],    "error": {      "examples": [        {          "title": "User error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostApiAuthEditProfile"  },  {    "type": "post",    "url": "/api/auth/forgot-password",    "title": "Forgot Password API",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User email</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"email\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Thank you. Your password send to your email\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/forgot-password"      }    ],    "error": {      "examples": [        {          "title": "User error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostApiAuthForgotPassword"  },  {    "type": "post",    "url": "/api/auth/login",    "title": "Login",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>User Username</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User Password</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"username\" : \"\",\n     \"password\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"data\": \"{\n        \"token\":''\n     }\",\n     \"message\": \"Successfully login\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/login"      }    ],    "error": {      "examples": [        {          "title": "Login error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostApiAuthLogin"  },  {    "type": "post",    "url": "/auth/log",    "title": "Search Log",    "group": "Authentication",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get user list\",\n        \"data\":{\n                 \"id\" : \"\",\n                 \"title\" : \"\",\n                 \"title\" : \"\",\n                 \"content\" : \"\",\n                 \"approveUserId\" : \"\",\n                 \"approveDate\" : \"\",\n                 \"likeCount\" : \"\",\n                 \"dislikeCount\" : \"\",\n                 \"endDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/log/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PostAuthLog"  },  {    "type": "put",    "url": "/api/auth/change-password",    "title": "Change Password API",    "group": "Authentication",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "oldPassword",            "description": "<p>User oldPassword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "newPassword",            "description": "<p>User newPassword</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"oldPassword\" : \"\",\n     \"newPassword\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Password changed\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/change-password"      }    ],    "error": {      "examples": [        {          "title": "User error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PutApiAuthChangePassword"  },  {    "type": "put",    "url": "/api/auth/update-user/:id",    "title": "Update User API",    "group": "Authentication",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>userName</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User First Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User Last Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User Email-Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "userGroupId",            "description": "<p>User GroupId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"username\" : \"\",\n     \"password\" : \"\",\n     \"firstName\" : \"\",\n     \"lastName\" : \"\",\n     \"email\" : \"\",\n     \"userGroupId\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"User is updated successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/update-user/:id"      }    ],    "error": {      "examples": [        {          "title": "updateUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Authentication",    "name": "PutApiAuthUpdateUserId"  },  {    "type": "get",    "url": "/api/config/:name",    "title": "Pageuser Find Config API",    "group": "Config",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n     {\n     \"message\": \"Successfully get Config Details\",\n     \"data\":{\n     \"name\" : \"\",\n     \"link\" : \"\",\n     \"logo_url\" : \"\"\n     }\n     \"status\": \"1\"\n     }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/config/:name"      }    ],    "error": {      "examples": [        {          "title": "config error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ConfigController.ts",    "groupTitle": "Config",    "name": "GetApiConfigName"  },  {    "type": "post",    "url": "/api/config/search",    "title": "Search Config API",    "group": "Config",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get config search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/config/search"      }    ],    "error": {      "examples": [        {          "title": "config error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ConfigController.ts",    "groupTitle": "Config",    "name": "PostApiConfigSearch"  },  {    "type": "delete",    "url": "/api/debate/:debateId/comment/:id",    "title": "Delete Debate Comment",    "group": "DebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"debateId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted Admin Debate Comment.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:debateId/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateCommentController.ts",    "groupTitle": "DebateComment",    "name": "DeleteApiDebateDebateidCommentId"  },  {    "type": "delete",    "url": "/api/debate/:debateId/comment/:id/like",    "title": "Delete Like API",    "group": "DebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "deleteLike",            "description": "<p>Delete Like</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Like Debate Comment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:debateId/comment/:id/like"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment Error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateCommentController.ts",    "groupTitle": "DebateComment",    "name": "DeleteApiDebateDebateidCommentIdLike"  },  {    "type": "get",    "url": "/api/debate/:debateId/comment/:id",    "title": "Find Debate Comment",    "group": "DebateComment",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find Debate Comment Successfully\",\n     \"data\":{\n     \"id\" : \"\",\n     \"debateId\" : \"\",\n     \"comment\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"createdBy\" : \"\",\n     \"createdDate\" : \"\",\n     \"createdTime\" : \"\",\n     \"modifiedDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:debateId/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment Error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateCommentController.ts",    "groupTitle": "DebateComment",    "name": "GetApiDebateDebateidCommentId"  },  {    "type": "post",    "url": "/api/debate/:debateId/comment",    "title": "Add Debate Comment",    "group": "DebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Debate Comment</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"comment\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Debate Comment is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:debateId/comment"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateCommentController.ts",    "groupTitle": "DebateComment",    "name": "PostApiDebateDebateidComment"  },  {    "type": "post",    "url": "/api/debate/:debateId/comment/:id/like",    "title": "Like Debate Comment",    "group": "DebateComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isLike",            "description": "<p>Like</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Like Debate Comment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:debateId/comment/:id/like"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateCommentController.ts",    "groupTitle": "DebateComment",    "name": "PostApiDebateDebateidCommentIdLike"  },  {    "type": "post",    "url": "/api/debate/:debateId/comment/search",    "title": "Search Debate Comment",    "group": "DebateComment",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"debateId\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search Debate Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:debateId/comment/search"      }    ],    "error": {      "examples": [        {          "title": "Debate Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateCommentController.ts",    "groupTitle": "DebateComment",    "name": "PostApiDebateDebateidCommentSearch"  },  {    "type": "put",    "url": "/api/debate/:debateId/comment/:id",    "title": "Update Debate Comment",    "group": "DebateComment",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Debate Comment</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"comment\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \" Debate is updated successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:debateId/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "updateDebate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateCommentController.ts",    "groupTitle": "DebateComment",    "name": "PutApiDebateDebateidCommentId"  },  {    "type": "delete",    "url": "/api/debate/:id/like",    "title": "Delete Like Debate",    "group": "Debate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Boolean",            "allowedValues": [              "true",              "false"            ],            "optional": false,            "field": "deleteLike",            "description": "<p>Delete Like</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Delete Like Debate Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:id/like"      }    ],    "error": {      "examples": [        {          "title": "debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateController.ts",    "groupTitle": "Debate",    "name": "DeleteApiDebateIdLike"  },  {    "type": "get",    "url": "/api/debate/:id",    "title": "Find Debate",    "group": "Debate",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find Debate Successfully\",\n     \"data\":{\n     \"id\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"createdBy\" : \"\",\n     \"createdDate\" : \"\",\n     \"createdTime\" : \"\",\n     \"modifiedDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:id"      }    ],    "error": {      "examples": [        {          "title": "debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateController.ts",    "groupTitle": "Debate",    "name": "GetApiDebateId"  },  {    "type": "get",    "url": "/api/debate/:id/count",    "title": "Count Debate Comment",    "group": "Debate",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Debate Comment Count Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:id/count"      }    ],    "error": {      "examples": [        {          "title": "debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateController.ts",    "groupTitle": "Debate",    "name": "GetApiDebateIdCount"  },  {    "type": "get",    "url": "/api/debate/search/hot",    "title": "Hot Debate",    "group": "Debate",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find Hot Debate Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/search/hot"      }    ],    "error": {      "examples": [        {          "title": "debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateController.ts",    "groupTitle": "Debate",    "name": "GetApiDebateSearchHot"  },  {    "type": "get",    "url": "/api/relatetag/debate",    "title": "RelateTag Debate",    "group": "Debate",    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"RelateTag Debate Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/relatetag/debate"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RelateTagController.ts",    "groupTitle": "Debate",    "name": "GetApiRelatetagDebate"  },  {    "type": "post",    "url": "/api/debate",    "title": "Add Debate",    "group": "Debate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>content</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"content\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Debate is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateController.ts",    "groupTitle": "Debate",    "name": "PostApiDebate"  },  {    "type": "post",    "url": "/api/debate/:id/like",    "title": "Like Debate",    "group": "Debate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isLike",            "description": "<p>isLike</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Like Debate Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:id/like"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateController.ts",    "groupTitle": "Debate",    "name": "PostApiDebateIdLike"  },  {    "type": "post",    "url": "/api/debate/search",    "title": "Search Debate",    "group": "Debate",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search Debate Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/search"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateController.ts",    "groupTitle": "Debate",    "name": "PostApiDebateSearch"  },  {    "type": "put",    "url": "/api/debate/:id",    "title": "Update Debate",    "group": "Debate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>Debate Title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>Debate Content</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"content\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully updated Debate.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/debate/:id"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/DebateController.ts",    "groupTitle": "Debate",    "name": "PutApiDebateId"  },  {    "type": "delete",    "url": "/api/email-template/delete-email-template/:id",    "title": "Delete EmailTemplate API",    "group": "EmailTemplate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"emailTemplateId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted emailTemplate.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/email-template/delete-email-template/:id"      }    ],    "error": {      "examples": [        {          "title": "EmailTemplate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/EmailTemplateController.ts",    "groupTitle": "EmailTemplate",    "name": "DeleteApiEmailTemplateDeleteEmailTemplateId"  },  {    "type": "get",    "url": "/api/email-template/email-templatelist",    "title": "EmailTemplate List API",    "group": "EmailTemplate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "count",            "description": "<p>count should be number or boolean</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get emailTemplate list\",\n     \"data\":{\n     \"id\" : \"\",\n     \"title\" : \"\",\n     \"subject\" : \"\",\n     \"content\" : \"\",\n     \"status\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/email-template/email-templatelist"      }    ],    "error": {      "examples": [        {          "title": "EmailTemplate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/EmailTemplateController.ts",    "groupTitle": "EmailTemplate",    "name": "GetApiEmailTemplateEmailTemplatelist"  },  {    "type": "post",    "url": "/api/email-template/add-email-template",    "title": "Add Email Template API",    "group": "EmailTemplate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>EmailTemplate title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>EmailTemplate subject</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>EmailTemplate content</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>EmailTemplate status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"subject\" : \"\",\n     \"content\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully created new emailTemplate.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/email-template/add-email-template"      }    ],    "error": {      "examples": [        {          "title": "EmailTemplate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/EmailTemplateController.ts",    "groupTitle": "EmailTemplate",    "name": "PostApiEmailTemplateAddEmailTemplate"  },  {    "type": "put",    "url": "/api/email-template/update-email-template/:id",    "title": "Update EmailTemplate API",    "group": "EmailTemplate",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "title",            "description": "<p>EmailTemplate title</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "subject",            "description": "<p>EmailTemplate subject</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "content",            "description": "<p>EmailTemplate content</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>EmailTemplate status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"title\" : \"\",\n     \"subject\" : \"\",\n     \"content\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully updated emailTemplate.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/email-template/update-email-template/:id"      }    ],    "error": {      "examples": [        {          "title": "emailTemplate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/EmailTemplateController.ts",    "groupTitle": "EmailTemplate",    "name": "PutApiEmailTemplateUpdateEmailTemplateId"  },  {    "type": "post",    "url": "/api/exp/search",    "title": "Search API",    "group": "Exp",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search user exp stmt Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/exp/search"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserExpStatementController.ts",    "groupTitle": "Exp",    "name": "PostApiExpSearch"  },  {    "type": "post",    "url": "/api/hot/debate",    "title": "Calculate Hot Score of Debate",    "group": "Hot",    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Calculate Debate's hot score successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/hot/debate"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/HotScoreController.ts",    "groupTitle": "Hot",    "name": "PostApiHotDebate"  },  {    "type": "post",    "url": "/api/hot/debate/reset",    "title": "Calculate Hot Score of Debate",    "group": "Hot",    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Reset Debate's hot score successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/hot/debate/reset"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/HotScoreController.ts",    "groupTitle": "Hot",    "name": "PostApiHotDebateReset"  },  {    "type": "post",    "url": "/api/hot/proposal",    "title": "Calculate Hot Score of Proposal",    "group": "Hot",    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Calculate Proposal's hot score successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/hot/proposal"      }    ],    "error": {      "examples": [        {          "title": "Proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/HotScoreController.ts",    "groupTitle": "Hot",    "name": "PostApiHotProposal"  },  {    "type": "post",    "url": "/api/hot/proposal/reset",    "title": "Calculate Hot Score of Proposal",    "group": "Hot",    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Reset Proposal's hot score successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/hot/proposal/reset"      }    ],    "error": {      "examples": [        {          "title": "Proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/HotScoreController.ts",    "groupTitle": "Hot",    "name": "PostApiHotProposalReset"  },  {    "type": "get",    "url": "/api/pageslide/:id",    "title": "Find MainPageSlide",    "group": "MainPageSlide",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find MainPageSlide Successfully\",\n     \"data\":{\n     \"id\" : \"\",\n     \"videoUrl\" : \"\",\n     \"imageUrl\" : \"\",\n     \"odering\" : \"\",\n     \"delayMilisec\" : \"\",\n     \"isAutoPlay\" : \"\",\n     \"createdBy\" : \"\",\n     \"createdByUsername\" : \"\",\n     \"createdDate\" : \"\",\n     \"modifiedBy\" : \"\",\n     \"modifiedByUsername\" : \"\",\n     \"modifiedDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageslide/:id"      }    ],    "error": {      "examples": [        {          "title": "pageslide error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MainPageSlideController.ts",    "groupTitle": "MainPageSlide",    "name": "GetApiPageslideId"  },  {    "type": "post",    "url": "/api/pageslide/search",    "title": "Search MainPageSlide",    "group": "MainPageSlide",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n     \"videoUrl\" : \"\",\n     \"imageUrl\" : \"\",\n     \"ordering\" : \"\",\n     \"delayMilisec\" : \"\",\n     \"isAutoPlay\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search MainPageSlide Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageslide/search"      }    ],    "error": {      "examples": [        {          "title": "MainPageSlide error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MainPageSlideController.ts",    "groupTitle": "MainPageSlide",    "name": "PostApiPageslideSearch"  },  {    "type": "get",    "url": "/api/pagevideo/:id",    "title": "Find MainPagevideo",    "group": "MainPagevideo",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find MainPageVideo Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pagevideo/:id"      }    ],    "error": {      "examples": [        {          "title": "pagevideo error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MainPageVideoController.ts",    "groupTitle": "MainPagevideo",    "name": "GetApiPagevideoId"  },  {    "type": "post",    "url": "/api/pagevideo/search",    "title": "Search MainPagevideo",    "group": "MainPagevideo",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n     \"url\" : \"\",\n     \"tagline\" : \"\",\n     \"ordering\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search MainPageVideo Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pagevideo/search"      }    ],    "error": {      "examples": [        {          "title": "MainPageVideo error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MainPageVideoController.ts",    "groupTitle": "MainPagevideo",    "name": "PostApiPagevideoSearch"  },  {    "type": "get",    "url": "/api/content/hastag/:id",    "title": "Pageuser Search page_content has tag API",    "group": "PageContent",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get pageContent has id Details\",\n     \"data\":{\n     \"name\" : \"\",\n     \"description\" : \"\",\n     }\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/content/hastag/:id"      }    ],    "error": {      "examples": [        {          "title": "content error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageContentController.ts",    "groupTitle": "PageContent",    "name": "GetApiContentHastagId"  },  {    "type": "get",    "url": "/api/content/:id",    "title": "Pageuser Find page_content API",    "group": "PageContent",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get pageContent Details\",\n\"data\":{\n\"name\" : \"\",\n\"description\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/content/:id"      }    ],    "error": {      "examples": [        {          "title": "content error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageContentController.ts",    "groupTitle": "PageContent",    "name": "GetApiContentId"  },  {    "type": "post",    "url": "/api/content/hastag/search",    "title": "Pageuser hastagSearch Room API",    "group": "PageContent",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get content hasTag search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/content/hastag/search"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageContentController.ts",    "groupTitle": "PageContent",    "name": "PostApiContentHastagSearch"  },  {    "type": "post",    "url": "/api/content/:id/count",    "title": "Pageuser view page_content API",    "group": "PageContent",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully view count,\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/content/:id/count"      }    ],    "error": {      "examples": [        {          "title": "tag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageContentController.ts",    "groupTitle": "PageContent",    "name": "PostApiContentIdCount"  },  {    "type": "post",    "url": "/api/content/search",    "title": "Pageuser Search page_content API",    "group": "PageContent",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get pageContent search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/content/search"      }    ],    "error": {      "examples": [        {          "title": "tag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageContentController.ts",    "groupTitle": "PageContent",    "name": "PostApiContentSearch"  },  {    "type": "delete",    "url": "/api/pageuser/delete-customer/:id",    "title": "Delete PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"customerId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted customer.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/delete-customer/:id"      }    ],    "error": {      "examples": [        {          "title": "PageUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "DeleteApiPageuserDeleteCustomerId"  },  {    "type": "get",    "url": "/api/pageuser/check_status",    "title": "Check UserStatus with token",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Mode",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Facebook User Token</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"data\": \"{\n        \"user\":''\n     }\",\n     \"message\": \"Account was valid\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/check_status"      }    ],    "error": {      "examples": [        {          "title": "User Token error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserCheck_status"  },  {    "type": "get",    "url": "/api/pageuser/count",    "title": "Count Pageuser",    "group": "PageUser",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Pageuser Count Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/count"      }    ],    "error": {      "examples": [        {          "title": "Pageuser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserCount"  },  {    "type": "get",    "url": "/api/pageuser/customerlist",    "title": "PageUser List API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>search by name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>search bu email</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>0-&gt;inactive 1-&gt; active</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "customerGroup",            "description": "<p>search by customerGroup</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>search by date</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "count",            "description": "<p>count should be number or boolean</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get customer list\",\n     \"data\":{\n     \"customerGroupId\" : \"\",\n     \"username\" : \"\",\n     \"email\" : \"\",\n     \"mobileNUmber\" : \"\",\n     \"password\" : \"\",\n     \"avatar\" : \"\",\n     \"avatarPath\" : \"\",\n     \"status\" : \"\",\n     \"safe\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/customerlist"      }    ],    "error": {      "examples": [        {          "title": "customer error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserCustomerlist"  },  {    "type": "get",    "url": "/api/pageuser/get-profile",    "title": "Get Profile API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Get the Profile..!\",\n     \"status\": \"1\"\n      \"data\":{}\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/get-profile"      }    ],    "error": {      "examples": [        {          "title": "Get Profile error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserGetProfile"  },  {    "type": "get",    "url": "/api/pageuser/login-log-list",    "title": "Login Log list API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get login log list\",\n     \"data\":{\n     \"id\"\n     \"userId\"\n     \"emailId\"\n     \"firstName\"\n     \"ipAddress\"\n     \"createdDate\"\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/login-log-list"      }    ],    "error": {      "examples": [        {          "title": "Front error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserLoginLogList"  },  {    "type": "get",    "url": "/api/pageuser/pageuser-details/:id",    "title": "PageUser Details API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get customer Details\",\n\"data\":{\n\"customerGroupId\" : \"\",\n\"username\" : \"\",\n\"email\" : \"\",\n\"mobileNumber\" : \"\",\n\"password\" : \"\",\n\"avatar\" : \"\",\n\"avatarPath\" : \"\",\n\"newsletter\" : \"\",\n\"status\" : \"\",\n\"safe\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/pageuser-details/:id"      }    ],    "error": {      "examples": [        {          "title": "customer error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserPageuserDetailsId"  },  {    "type": "get",    "url": "/api/pageuser/pageuser-excel-list",    "title": "PageUser Excel",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "customerId",            "description": "<p>customerId</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully download the PageUser Excel List..!!\",\n     \"status\": \"1\",\n     \"data\": {},\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/pageuser-excel-list"      }    ],    "error": {      "examples": [        {          "title": "PageUser Excel List error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserPageuserExcelList"  },  {    "type": "get",    "url": "/api/pageuser/recent-customerlist",    "title": "Recent PageUser List API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get customer list\",\n     \"data\":{\n     \"location\" : \"\",\n     \"name\" : \"\",\n     \"created date\" : \"\",\n     \"isActive\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/recent-customerlist"      }    ],    "error": {      "examples": [        {          "title": "customer error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserRecentCustomerlist"  },  {    "type": "get",    "url": "/api/pageuser/today-customercount",    "title": "Today PageUser Count API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get Today customer count\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/today-customercount"      }    ],    "error": {      "examples": [        {          "title": "order error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "GetApiPageuserTodayCustomercount"  },  {    "type": "post",    "url": "/api/pageuser/add-customer",    "title": "Add PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "customerGroupId",            "description": "<p>PageUser customerGroupId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>PageUser username</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>PageUser email</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "mobileNumber",            "description": "<p>PageUser mobileNumber</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>PageUser password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "confirmPassword",            "description": "<p>PageUser confirmPassword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>PageUser avatar</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "mailStatus",            "description": "<p>PageUser mailStatus should be 1 or 0</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>PageUser status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"customerGroupId\" : \"\",\n     \"userName\" : \"\",\n     \"email\" : \"\",\n     \"mobileNumber\" : \"\",\n     \"password\" : \"\",\n     \"confirmPassword\" : \"\",\n     \"avatar\" : \"\",\n     \"mailStatus\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"PageUser Created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/add-customer"      }    ],    "error": {      "examples": [        {          "title": "PageUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserAddCustomer"  },  {    "type": "post",    "url": "/api/pageuser/change-password",    "title": "Change Password API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "oldPassword",            "description": "<p>Old Password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "newPassword",            "description": "<p>New Password</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "     \"oldPassword\" : \"\",\n     \"newPassword\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Your password changed successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/change-password"      }    ],    "error": {      "examples": [        {          "title": "Change Password error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserChangePassword"  },  {    "type": "post",    "url": "/api/pageuser/debate/comment/search",    "title": "Search PageUser Debate Comment",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search Debate Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/debate/comment/search"      }    ],    "error": {      "examples": [        {          "title": "Debate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserDebateCommentSearch"  },  {    "type": "post",    "url": "/api/pageuser/edit-profile",    "title": "Edit Profile API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>First Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Last Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "phoneNumber",            "description": "<p>User Phone Number (Optional)</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "image",            "description": "<p>PageUser Image</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"firstName\" : \"\", *\n     \"lastName\" : \"\", *\n     \"displayName\" \"\", *\n     \"gender\" : \"\", *\n     \"birthday\" \"\", *\n     \"postcode\" : \"\", *\n     \"carrer\" : \"\", *\n     \"phoneNumber\" : \"\",\n     \"image\": \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully updated your profile.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/edit-profile"      }    ],    "error": {      "examples": [        {          "title": "Register error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserEditProfile"  },  {    "type": "post",    "url": "/api/pageuser/forgot-password",    "title": "Forgot Password API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"emailId\" : \"\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Thank you,Your password send to your mail id please check your email.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/forgot-password"      }    ],    "error": {      "examples": [        {          "title": "Forgot Password error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserForgotPassword"  },  {    "type": "post",    "url": "/api/pageuser/login",    "title": "login API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User Password</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"emailId\" : \"\",\n     \"password\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"data\": \"{\n        \"token\":''\n     }\",\n     \"message\": \"Successfully login\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/login"      }    ],    "error": {      "examples": [        {          "title": "Login error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserLogin"  },  {    "type": "post",    "url": "/api/pageuser/login_fb",    "title": "login With Facebook API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Facebook User Token</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"token\" : \"\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"data\": \"{\n        \"token\":'',\n         \"user\":''\n     }\",\n     \"message\": \"Successfully login\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/login_fb"      }    ],    "error": {      "examples": [        {          "title": "Login error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserLogin_fb"  },  {    "type": "post",    "url": "/api/pageuser/logout",    "title": "Logout Page User",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Facebook User Token</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"data\": \"{\n        \"user\":''\n     }\",\n     \"message\": \"Logout Page User\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/logout"      }    ],    "error": {      "examples": [        {          "title": "User Token error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserLogout"  },  {    "type": "Post",    "url": "/api/pageuser/proposal/comment/search",    "title": "Proposal Comment Search API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ],        "Parameter": [          {            "group": "Parameter",            "type": "boolean",            "optional": false,            "field": "show_user",            "description": "<p>flag that will make data return user</p>"          },          {            "group": "Parameter",            "type": "number",            "optional": false,            "field": "userLike",            "description": "<p>user's id fetch data user like</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get proposal list\",\n     \"data\":{\n             \"id\" : \"\",\n             \"roomId\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/proposal/comment/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserProposalCommentSearch"  },  {    "type": "post",    "url": "/api/pageuser/refresh",    "title": "Validate API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>User</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"data\": \"{\n        \"user\":''\n     }\",\n     \"message\": \"Account was valid\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/refresh"      }    ],    "error": {      "examples": [        {          "title": "User Token error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserRefresh"  },  {    "type": "post",    "url": "/api/pageuser/register",    "title": "register API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User Password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "confirmPassword",            "description": "<p>Confirm Password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "postcode",            "description": "<p>User postcode</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "identification",            "description": "<p>User identification</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "education",            "description": "<p>User education</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"password\" : \"\",\n     \"confirmPassword\" : \"\",\n     \"emailId\" : \"\",\n     \"gender\" : \"\",\n     \"birthday\" : \"\",\n     \"postcode\" : \"\",\n     \"identification\" : \"\",\n     \"education\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Thank you for registering with us and please check your email\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/register"      }    ],    "error": {      "examples": [        {          "title": "Register error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserRegister"  },  {    "type": "post",    "url": "/api/pageuser/register_fb",    "title": "register API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>First name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>Last name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "phoneNumber",            "description": "<p>User Phone Number (Optional)</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"firstName\" : \"\",\n     \"lastName\" : \"\",\n     \"emailId\" : \"\",\n     \"displayName\" : \"\",\n     \"gender\" : \"\",\n     \"birthday\" : \"\",\n     \"postcode\" : \"\",\n     \"phoneNumber\" : \"\",\n     \"fbUserId\" : \"\",\n     \"fbToken\" : \"\",\n     \"fbAccessExpirationTime\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Thank you for registering with us.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/register_fb"      }    ],    "error": {      "examples": [        {          "title": "Register error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserRegister_fb"  },  {    "type": "post",    "url": "/api/pageuser/search",    "title": "Pageuser Search API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get pageUser search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/content/search"      }    ],    "error": {      "examples": [        {          "title": "tag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserSearch"  },  {    "type": "post",    "url": "/api/pageuser/validate_citizen",    "title": "Validate API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "citizen",            "description": "<p>User citizen</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"identification_code\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/validate_citizen"      }    ],    "error": {      "examples": [        {          "title": "Validate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserValidate_citizen"  },  {    "type": "post",    "url": "/api/pageuser/validate_email",    "title": "Validate API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "emailId",            "description": "<p>User Email Id</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"email\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/validate_email"      }    ],    "error": {      "examples": [        {          "title": "Validate error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserValidate_email"  },  {    "type": "post",    "url": "/api/pageuser/vote/comment/search",    "title": "Search API",    "group": "PageUser",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/vote/comment/search"      }    ],    "error": {      "examples": [        {          "title": "voteComment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiPageuserVoteCommentSearch"  },  {    "type": "post",    "url": "/api/product/delete-customer",    "title": "Delete Multiple PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "customerId",            "description": "<p>customerId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n\"customerId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully deleted customer.\",\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/delete-customer"      }    ],    "error": {      "examples": [        {          "title": "customerDelete error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PostApiProductDeleteCustomer"  },  {    "type": "put",    "url": "/api/pageuser/ban/:id",    "title": "Ban PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully baned customer.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/ban/:id"      }    ],    "error": {      "examples": [        {          "title": "PageUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PutApiPageuserBanId"  },  {    "type": "put",    "url": "/api/pageuser/official/:id",    "title": "Official PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully official customer.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/official/:id"      }    ],    "error": {      "examples": [        {          "title": "PageUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PutApiPageuserOfficialId"  },  {    "type": "put",    "url": "/api/pageuser/unban/:id",    "title": "Unban PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully baned customer.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/unban/:id"      }    ],    "error": {      "examples": [        {          "title": "PageUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PutApiPageuserUnbanId"  },  {    "type": "put",    "url": "/api/pageuser/unofficial/:id",    "title": "Official PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"id\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully baned customer.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/unofficial/:id"      }    ],    "error": {      "examples": [        {          "title": "PageUser error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PutApiPageuserUnofficialId"  },  {    "type": "put",    "url": "/api/pageuser/update-customer/:id",    "title": "Update PageUser API",    "group": "PageUser",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "customerGroupId",            "description": "<p>PageUser customerGroupId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>PageUser username</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>PageUser email</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "mobileNumber",            "description": "<p>PageUser mobileNumber</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>PageUser password</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "confirmPassword",            "description": "<p>PageUser confirmPassword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "avatar",            "description": "<p>PageUser avatar</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "mailStatus",            "description": "<p>PageUser mailStatus should be 1 or 0</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>PageUser status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"customerGroupId\" : \"\",\n     \"userName\" : \"\",\n     \"email\" : \"\",\n     \"mobileNumber\" : \"\",\n     \"password\" : \"\",\n     \"confirmPassword\" : \"\",\n     \"avatar\" : \"\",\n     \"mailStatus\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \" PageUser is updated successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/pageuser/update-customer/:id"      }    ],    "error": {      "examples": [        {          "title": "updateCustomer error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PageUserController.ts",    "groupTitle": "PageUser",    "name": "PutApiPageuserUpdateCustomerId"  },  {    "type": "get",    "url": "/api/partner/:id",    "title": "Pageuser Find Partner API",    "group": "Partner",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n     {\n     \"message\": \"Successfully get Partner Details\",\n     \"data\":{\n     \"name\" : \"\",\n     \"link\" : \"\",\n     \"logo_url\" : \"\"\n     }\n     \"status\": \"1\"\n     }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/partner/:id"      }    ],    "error": {      "examples": [        {          "title": "partner error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PartnerController.ts",    "groupTitle": "Partner",    "name": "GetApiPartnerId"  },  {    "type": "post",    "url": "/api/partner/search",    "title": "Search Partner API",    "group": "Partner",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get partner search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/partner/search"      }    ],    "error": {      "examples": [        {          "title": "partner error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PartnerController.ts",    "groupTitle": "Partner",    "name": "PostApiPartnerSearch"  },  {    "type": "get",    "url": "/api/exp/:user_id",    "title": "postcode Find API",    "group": "Postcode",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get user exp stmt Find\",\n\"data\":{\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/exp/:id"      }    ],    "error": {      "examples": [        {          "title": "exp error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserExpStatementController.ts",    "groupTitle": "Postcode",    "name": "GetApiExpUser_id"  },  {    "type": "get",    "url": "/api/postcode/:id",    "title": "postcode Find API",    "group": "Postcode",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get postcode Find\",\n\"data\":{\n         \"id\" : \"\",\n         \"province\" : \"\",\n         \"postcode\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/postcode/:id"      }    ],    "error": {      "examples": [        {          "title": "postcode error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PostcodeController.ts",    "groupTitle": "Postcode",    "name": "GetApiPostcodeId"  },  {    "type": "post",    "url": "/api/postcode/search",    "title": "Search API",    "group": "Postcode",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search Postcode Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/postcode/search"      }    ],    "error": {      "examples": [        {          "title": "postcode error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/PostcodeController.ts",    "groupTitle": "Postcode",    "name": "PostApiPostcodeSearch"  },  {    "type": "Delete",    "url": "/api/proposal/:id/like",    "title": "Delete Like Proposal API",    "group": "Proposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"approveUserId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is delete like successfully\",\n     \"status\": \"1\"\n     \"data\" : {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"supporterCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:id/like"      }    ],    "error": {      "examples": [        {          "title": "Proposal Like error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "DeleteApiProposalIdLike"  },  {    "type": "get",    "url": "/api/proposal/hot",    "title": "Proposal HotTopic API",    "group": "Proposal",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get proposal hottopic\",\n        \"data\":{\n             \"id\" : \"\",\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"supporterCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/hot"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "GetApiProposalHot"  },  {    "type": "get",    "url": "/api/proposal/:id",    "title": "proposal Find API",    "group": "Proposal",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get proposal Find\",\n\"data\":{\n\"name\" : \"\",\n\"description\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:id"      }    ],    "error": {      "examples": [        {          "title": "proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "GetApiProposalId"  },  {    "type": "get",    "url": "/api/proposal/:id/count",    "title": "proposal count comment API",    "group": "Proposal",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n      \"status\": \"1\",\n     \"message\": \"Successfully get proposal comment count\",\n        \"data\":\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:id/count"      }    ],    "error": {      "examples": [        {          "title": "proposal count comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "GetApiProposalIdCount"  },  {    "type": "get",    "url": "/api/relatetag/proposal",    "title": "RelateTag Proposal",    "group": "Proposal",    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"RelateTag Proposal Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/relatetag/proposal"      }    ],    "error": {      "examples": [        {          "title": "Proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RelateTagController.ts",    "groupTitle": "Proposal",    "name": "GetApiRelatetagProposal"  },  {    "type": "post",    "url": "/api/proposal",    "title": "Create Proposal API",    "group": "Proposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "roomId",            "description": "<p>Room ID *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>Proposal title *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "content",            "description": "<p>Proposal Content *</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "reqSupporter",            "description": "<p>Proposal Request Suporter</p>"          },          {            "group": "Request body",            "type": "Date",            "optional": false,            "field": "endDate",            "description": "<p>Date YYYY-MM-DD</p>"          },          {            "group": "Request body",            "type": "String[]",            "optional": false,            "field": "debateTag",            "description": "<p>Debatetag [1,2,3,..]</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"roomId\" : \"\",\n     \"content\" : \"\",\n     \"reqSupporter\" : \"\",\n     \"approveUserId\" : \"\",\n     \"approveDate\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"supporterCount\" : \"\",\n     \"endDate\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Proposal is created successfully\",\n     \"status\": \"1\",\n     \"data\": {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"supporterCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal"      }    ],    "error": {      "examples": [        {          "title": "Proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "PostApiProposal"  },  {    "type": "post",    "url": "/api/proposal/:id/like",    "title": "Like Proposal API",    "group": "Proposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isLike",            "description": "<p>boolean 0,1</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"approveUserId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is like successfully\",\n     \"status\": \"1\"\n     \"data\" : {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"supporterCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:id/like"      }    ],    "error": {      "examples": [        {          "title": "Proposal Like error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "PostApiProposalIdLike"  },  {    "type": "post",    "url": "/api/proposal/:id/support",    "title": "Proposal Spupporter API",    "group": "Proposal",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"approveUserId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is like successfully\",\n     \"status\": \"1\"\n     \"data\" : {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"supporterCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:id/support"      }    ],    "error": {      "examples": [        {          "title": "Proposal Like error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "PostApiProposalIdSupport"  },  {    "type": "Post",    "url": "/api/proposal/search",    "title": "Proposal Search API",    "group": "Proposal",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get proposal list\",\n     \"data\":{\n             \"id\" : \"\",\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"supporterCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "PostApiProposalSearch"  },  {    "type": "put",    "url": "/api/proposal/:id",    "title": "Edit Proposal API",    "group": "Proposal",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "roomId",            "description": "<p>Room ID *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "title",            "description": "<p>Proposal title *</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "content",            "description": "<p>Proposal content *</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "reqSupporter",            "description": "<p>Proposal Request Suporter</p>"          },          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "endDate",            "description": "<p>Date YYYY-MM-DD</p>"          },          {            "group": "Request body",            "type": "String[]",            "optional": false,            "field": "debateTag",            "description": "<p>Debatetag</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"roomId\" : \"\",\n     \"title\" : \"\",\n     \"content\" : \"\",\n     \"reqSupporter\" : \"\",\n     \"approveUserId\" : \"\",\n     \"approveDate\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n     \"supporterCount\" : \"\",\n     \"endDate\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is updated successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:id"      }    ],    "error": {      "examples": [        {          "title": "updateProposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalController.ts",    "groupTitle": "Proposal",    "name": "PutApiProposalId"  },  {    "type": "delete",    "url": "/api/proposal/:proposal_id/comment/:id",    "title": "Delete Proposal Comment API",    "group": "Proposal_Comment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Delete VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:proposal_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalCommentController.ts",    "groupTitle": "Proposal_Comment",    "name": "DeleteApiProposalProposal_idCommentId"  },  {    "type": "Delete",    "url": "/api/proposal/:proposal_id/comment/:id/like",    "title": "Delete Like Proposal API",    "group": "Proposal_Comment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n     \"approveUserId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is delete like successfully\",\n     \"status\": \"1\"\n     \"data\" : {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"supporterCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:proposal_id/comment/:id/like"      }    ],    "error": {      "examples": [        {          "title": "Proposal Like error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalCommentController.ts",    "groupTitle": "Proposal_Comment",    "name": "DeleteApiProposalProposal_idCommentIdLike"  },  {    "type": "get",    "url": "/api/proposal/:proposal_id/comment/:id",    "title": "proposal comment Find API",    "group": "Proposal_Comment",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"status\": \"1\"\n\"message\": \"Successfully get proposal Find\",\n\"data\":{\n         \"proposalId\" : \"\",\n         \"comment\" : \"\",\n         \"likeCount\" : \"\",\n         \"dislikeCount\" : \"\",\n}\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:proposal_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "proposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalCommentController.ts",    "groupTitle": "Proposal_Comment",    "name": "GetApiProposalProposal_idCommentId"  },  {    "type": "post",    "url": "/api/proposal/:proposal_id/comment",    "title": "Create Proposal Comment API",    "group": "Proposal_Comment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "comment",            "description": "<p>Proposal Comment</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"comment\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Proposal Comment is created successfully\",\n     \"status\": \"1\",\n     \"data\": {\n             \"proposalId\" : \"\",\n             \"comment\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:proposal_id/comment"      }    ],    "error": {      "examples": [        {          "title": "Proposal Comment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalCommentController.ts",    "groupTitle": "Proposal_Comment",    "name": "PostApiProposalProposal_idComment"  },  {    "type": "post",    "url": "/api/proposal/:proposal_id/comment/like",    "title": "Like Proposal Comment API",    "group": "Proposal_Comment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isLike",            "description": "<p>boolean 0,1</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"approveUserId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is like successfully\",\n     \"status\": \"1\"\n     \"data\" : {\n             \"roomId\" : \"\",\n             \"title\" : \"\",\n             \"content\" : \"\",\n             \"reqSupporter\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"supporterCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:proposal_id/comment/:id/like"      }    ],    "error": {      "examples": [        {          "title": "Proposal Like error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalCommentController.ts",    "groupTitle": "Proposal_Comment",    "name": "PostApiProposalProposal_idCommentLike"  },  {    "type": "Post",    "url": "/api/proposal/:proposal_id/comment/search",    "title": "Proposal Comment Search API",    "group": "Proposal_Comment",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ],        "Parameter": [          {            "group": "Parameter",            "type": "boolean",            "optional": false,            "field": "show_user",            "description": "<p>flag that will make data return user</p>"          },          {            "group": "Parameter",            "type": "number",            "optional": false,            "field": "userLike",            "description": "<p>user's id fetch data user like</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get proposal list\",\n     \"data\":{\n             \"id\" : \"\",\n             \"roomId\" : \"\",\n             \"approveUserId\" : \"\",\n             \"approveDate\" : \"\",\n             \"likeCount\" : \"\",\n             \"dislikeCount\" : \"\",\n             \"endDate\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:proposal_id/comment/search"      }    ],    "error": {      "examples": [        {          "title": "Page error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalCommentController.ts",    "groupTitle": "Proposal_Comment",    "name": "PostApiProposalProposal_idCommentSearch"  },  {    "type": "put",    "url": "/api/proposal/:proposal_id/comment/:id",    "title": "Edit Proposal Comment API",    "group": "Proposal_Comment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "string",            "optional": false,            "field": "comment",            "description": "<p>Prposal comment</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"proposalId\" : \"\",\n     \"comment\" : \"\",\n     \"likeCount\" : \"\",\n     \"dislikeCount\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Proposal is updated successfully\",\n     \"status\": \"1\"\n     \"data\": {\n              \"proposalId\" : \"\",\n              \"comment\" : \"\",\n              \"likeCount\" : \"\",\n              \"dislikeCount\" : \"\",\n     }\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/proposal/:proposal_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "updateProposal error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/ProposalCommentController.ts",    "groupTitle": "Proposal_Comment",    "name": "PutApiProposalProposal_idCommentId"  },  {    "type": "post",    "url": "/api/admin/relatetag/trendingscore",    "title": "Calculate Trending Score of RelateTag",    "group": "RelateTag",    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Calculate Trending Score of RelateTag successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/admin/relatetag/trendingscore"      }    ],    "error": {      "examples": [        {          "title": "RelateTag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/admin/AdminRelateTagController.ts",    "groupTitle": "RelateTag",    "name": "PostApiAdminRelatetagTrendingscore"  },  {    "type": "post",    "url": "/api/relatetag/search",    "title": "Search RelateTag API",    "group": "RelateTag",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get relateTag search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"trendingScore\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/relatetag/search"      }    ],    "error": {      "examples": [        {          "title": "relateTag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RelateTagController.ts",    "groupTitle": "RelateTag",    "name": "PostApiRelatetagSearch"  },  {    "type": "get",    "url": "/api/media/image-resize",    "title": "Resize Image On The Fly",    "group": "Resize_Image",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "width",            "description": "<p>width</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "height",            "description": "<p>height</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>path</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"Successfully resize image\",\n  \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/image-resize"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n    \"message\": \"Unable to resize the image\",\n    \"status\": 0,\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MediaController.ts",    "groupTitle": "Resize_Image",    "name": "GetApiMediaImageResize"  },  {    "type": "delete",    "url": "/api/role/delete-role/:id",    "title": "Delete Role API",    "group": "Role",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "groupId",            "description": "<p>groupId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"roleId\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully deleted Role.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/role/delete-role/:id"      }    ],    "error": {      "examples": [        {          "title": "Role error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RoleController.ts",    "groupTitle": "Role",    "name": "DeleteApiRoleDeleteRoleId"  },  {    "type": "get",    "url": "/api/role/rolelist",    "title": "Role List API",    "group": "Role",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "count",            "description": "<p>count in number or boolean</p>"          }        ]      }    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get role list\",\n   \"data\":\"{}\"\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/role/rolelist"      }    ],    "error": {      "examples": [        {          "title": "role error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RoleController.ts",    "groupTitle": "Role",    "name": "GetApiRoleRolelist"  },  {    "type": "post",    "url": "/api/role/create-role",    "title": "Create Role API",    "group": "Role",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>roleName</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"New Role is created successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/role/create-role"      }    ],    "error": {      "examples": [        {          "title": "createRole error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RoleController.ts",    "groupTitle": "Role",    "name": "PostApiRoleCreateRole"  },  {    "type": "put",    "url": "/api/role/update-role/:id",    "title": "Update Role API",    "group": "Role",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>roleName</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"slug\" : \"\",\n     \"status\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \" Role is updated successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/role/update-role/:id"      }    ],    "error": {      "examples": [        {          "title": "updateRole error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RoleController.ts",    "groupTitle": "Role",    "name": "PutApiRoleUpdateRoleId"  },  {    "type": "get",    "url": "/api/room/:id",    "title": "Pageuser Find Room API",    "group": "Room",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n\"message\": \"Successfully get room Details\",\n\"data\":{\n\"name\" : \"\",\n\"description\" : \"\",\n}\n\"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/room/:id"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RoomController.ts",    "groupTitle": "Room",    "name": "GetApiRoomId"  },  {    "type": "get",    "url": "/api/room/:id/proposal",    "title": "Pageuser list proposal Room API",    "group": "Room",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get proposal Details\",\n     \"data\":{\n     \"id\" : \"\",\n     \"room_id\" : \"\",\n     \"content\" : \"\",\n     \"req_supporter\" : \"\",\n     \"approve_user_id\" : \"\",\n     \"approve_date\" : \"\",\n     \"like_count\" : \"\",\n     \"dislike_count\" : \"\",\n     \"end_date\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/room/:id/proposal"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RoomController.ts",    "groupTitle": "Room",    "name": "GetApiRoomIdProposal"  },  {    "type": "get",    "url": "/api/room/:id/vote",    "title": "Pageuser list vote Room API",    "group": "Room",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get vote Details\",\n     \"data\":{\n     \"id\" : \"\",\n     \"proposal_id\" : \"\",\n     \"room_id\" : \"\",\n     \"content\" : \"\",\n     \"vote_count\" : \"\",\n     \"is_active\" : \"\",\n     \"like_count\" : \"\",\n     \"dislike_count\" : \"\",\n     \"end_date\" : \"\",\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/room/:id/vote"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RoomController.ts",    "groupTitle": "Room",    "name": "GetApiRoomIdVote"  },  {    "type": "post",    "url": "/api/room/search",    "title": "Pageuser Search Room API",    "group": "Room",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get room search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/room/search"      }    ],    "error": {      "examples": [        {          "title": "room error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RoomController.ts",    "groupTitle": "Room",    "name": "PostApiRoomSearch"  },  {    "type": "get",    "url": "/api/settings/get-settings",    "title": "Get Setting API",    "group": "Settings",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get settings\",\n     \"data\":\"{}\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/settings/get-settings"      }    ],    "error": {      "examples": [        {          "title": "getSettings error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/SettingController.ts",    "groupTitle": "Settings",    "name": "GetApiSettingsGetSettings"  },  {    "type": "post",    "url": "/api/settings/create-settings",    "title": "Create Settings API",    "group": "Settings",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "url",            "description": "<p>store url</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagTitle",            "description": "<p>metaTagTitle</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagDescription",            "description": "<p>metaTagDescription</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "metaTagKeywords",            "description": "<p>metaTagKeywords</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeName",            "description": "<p>storeName</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeOwner",            "description": "<p>storeOwner</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeAddress",            "description": "<p>storeAddress</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "countryId",            "description": "<p>countryId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "zoneId",            "description": "<p>zoneId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeEmail",            "description": "<p>storeEmail</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeTelephone",            "description": "<p>storeTelephone</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeFax",            "description": "<p>storeFax</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeLogo",            "description": "<p>storeLog</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "maintenanceMode",            "description": "<p>maintenanceMode</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "storeImage",            "description": "<p>storeImage</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "invoicePrefix",            "description": "<p>invoicePrefix</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "orderStatus",            "description": "<p>orderStatus</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "categoryProductCount",            "description": "<p>productCount should be 0 or 1</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "itemsPerPage",            "description": "<p>ItemsPerPage</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "facebook",            "description": "<p>facebook</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "twitter",            "description": "<p>twitter</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "instagram",            "description": "<p>instagram</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "google",            "description": "<p>google</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "status",            "description": "<p>status</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"url\" : \"\",\n     \"metaTagTitle\" : \"\",\n     \"metaTagDescription\" : \"\",\n     \"metaTagKeywords\" : \"\",\n     \"storeName\" : \"\",\n     \"storeOwner\" : \"\",\n     \"storeAddress\" : \"\",\n     \"countryId\" : \"\",\n     \"zoneId\" : \"\",\n     \"storeEmail\" : \"\",\n     \"storeTelephone\" : \"\",\n     \"storeFax\" : \"\",\n     \"storeLogo\" : \"\",\n     \"maintenanceMode\" : \"\",\n     \"storeImage\" : \"\",\n     \"invoicePrefix\" : \"\",\n     \"orderStatus\" : \"\",\n     \"categoryProductCount\" : \"\",\n     \"itemsPerPage\" : \"\",\n     \"google\" : \"\",\n     \"instagram\" : \"\",\n     \"facebook\" : \"\",\n     \"twitter\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully created setting.\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/settings/create-settings"      }    ],    "error": {      "examples": [        {          "title": "addSettings error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/SettingController.ts",    "groupTitle": "Settings",    "name": "PostApiSettingsCreateSettings"  },  {    "type": "get",    "url": "/api/list/category-list",    "title": "Category List Tree API",    "group": "Store_List",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>Limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>Offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "sortOrder",            "description": "<p>sortOrder</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "count",            "description": "<p>count in number or boolean</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"limit\" : \"\",\n     \"offset\": \"\",\n     \"keyorder\": \"\",\n     \"sortOrder\": \"\",\n     \"count\": \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"category list shown successfully..!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/category-list"      }    ],    "error": {      "examples": [        {          "title": "Category List error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListCategoryList"  },  {    "type": "get",    "url": "/api/list/custom-product-list",    "title": "Custom Product List API",    "group": "Store_List",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "manufacturerId",            "description": "<p>manufacturerId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "categoryId",            "description": "<p>categoryId</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceFrom",            "description": "<p>price from you want to list</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceTo",            "description": "<p>price to you want to list</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "price",            "description": "<p>ASC OR DESC</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "condition",            "description": "<p>1-&gt;new 2-&gt;used</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get product list\",\n     \"data\":\"{}\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/custom-product-list"      }    ],    "error": {      "examples": [        {          "title": "productList error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListCustomProductList"  },  {    "type": "get",    "url": "/api/list/product-count",    "title": "Product Count API",    "group": "Store_List",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword for search</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "manufacturerId",            "description": "<p>manufacturerId</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "categoryId",            "description": "<p>categoryId</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceFrom",            "description": "<p>price from you want to list</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceTo",            "description": "<p>price to you want to list</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get Product Count\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/product-count"      }    ],    "error": {      "examples": [        {          "title": "product count error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListProductCount"  },  {    "type": "get",    "url": "/api/list/productlist",    "title": "Product List API",    "group": "Store_List",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "manufacturerId",            "description": "<p>manufacturerId</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "categoryId",            "description": "<p>categoryId</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceFrom",            "description": "<p>price from you want to list</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "priceTo",            "description": "<p>price to you want to list</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>orderBy 0-&gt;desc 1-&gt;asc</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "condition",            "description": "<p>1-&gt;new 2-&gt;used</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "keyword",            "description": "<p>keyword</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "count",            "description": "<p>count in boolean or number</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get product list\",\n     \"data\":\"{}\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/productlist"      }    ],    "error": {      "examples": [        {          "title": "productList error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListProductlist"  },  {    "type": "get",    "url": "/api/list/specific-category-list",    "title": "Specific Category List",    "group": "Store_List",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "categoryId",            "description": "<p>categoryId</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"parentInt\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Category listed successfully..!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/specific-category-list"      }    ],    "error": {      "examples": [        {          "title": "Category List error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "GetApiListSpecificCategoryList"  },  {    "type": "post",    "url": "/api/list/contact-us",    "title": "Contact Us API",    "group": "Store_List",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "phoneNumber",            "description": "<p>Phone Number</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Message</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"name\" : \"\",\n     \"email\" : \"\",\n     \"phoneNumber\" : \"\",\n     \"message\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Your mail send to admin..!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/list/contact-us"      }    ],    "error": {      "examples": [        {          "title": "Contact error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/page/CommonListController.ts",    "groupTitle": "Store_List",    "name": "PostApiListContactUs"  },  {    "type": "get",    "url": "/api/tag/:id",    "title": "Pageuser Find Tag API",    "group": "Tag",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n     {\n     \"message\": \"Successfully get Tag Details\",\n     \"data\":{\n     \"name\" : \"\",\n     \"description\" : \"\",\n     }\n     \"status\": \"1\"\n     }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/tag/:id"      }    ],    "error": {      "examples": [        {          "title": "tag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/TagController.ts",    "groupTitle": "Tag",    "name": "GetApiTagId"  },  {    "type": "get",    "url": "/api/tag/:id/content",    "title": "Pageuser List tagContent API",    "group": "Tag",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"status\": \"1\"\n     \"message\": \"Successfully get tagContent Detail\",\n     \"data\":\"{}\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/tag/:id/content"      }    ],    "error": {      "examples": [        {          "title": "tagContent error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/TagController.ts",    "groupTitle": "Tag",    "name": "GetApiTagIdContent"  },  {    "type": "post",    "url": "/api/auth/search",    "title": "Pageuser Search Tag API",    "group": "Tag",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get auth search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/auth/search"      }    ],    "error": {      "examples": [        {          "title": "auth error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/UserController.ts",    "groupTitle": "Tag",    "name": "PostApiAuthSearch"  },  {    "type": "post",    "url": "/api/tag/search",    "title": "Pageuser Search Tag API",    "group": "Tag",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "count",            "description": "<p>count (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n   \"message\": \"Successfully get tag search\",\n   \"data\":{\n   \"name\" : \"\",\n   \"description\": \"\",\n    }\n   \"status\": \"1\"\n }",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/tag/search"      }    ],    "error": {      "examples": [        {          "title": "tag error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/TagController.ts",    "groupTitle": "Tag",    "name": "PostApiTagSearch"  },  {    "type": "delete",    "url": "/api/vote/:vote_id/comment/:id",    "title": "Delete API",    "group": "VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Delete Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:vote_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteCommentController.ts",    "groupTitle": "VoteComment",    "name": "DeleteApiVoteVote_idCommentId"  },  {    "type": "delete",    "url": "/api/vote/:vote_id/comment/:id/like",    "title": "Delete Like API",    "group": "VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Like VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:vote_id/comment/:id/like"      }    ],    "error": {      "examples": [        {          "title": "voteComment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteCommentController.ts",    "groupTitle": "VoteComment",    "name": "DeleteApiVoteVote_idCommentIdLike"  },  {    "type": "get",    "url": "/api/vote/:vote_id/comment/:id",    "title": "Find API",    "group": "VoteComment",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:vote_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "voteComment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteCommentController.ts",    "groupTitle": "VoteComment",    "name": "GetApiVoteVote_idCommentId"  },  {    "type": "post",    "url": "/api/vote/:vote_id/comment",    "title": "Create API",    "group": "VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Comment</p>"          },          {            "group": "Request body",            "type": "number",            "size": "..1",            "allowedValues": [              "1",              "0",              "-1"            ],            "optional": false,            "field": "value",            "description": "<p>Value</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Create VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:vote_id/comment"      }    ],    "error": {      "examples": [        {          "title": "voteComment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteCommentController.ts",    "groupTitle": "VoteComment",    "name": "PostApiVoteVote_idComment"  },  {    "type": "post",    "url": "/api/vote/:vote_id/comment/:id/like",    "title": "Like API",    "group": "VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isLike",            "description": "<p>Like</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Like VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:vote_id/comment/:id/like"      }    ],    "error": {      "examples": [        {          "title": "voteComment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteCommentController.ts",    "groupTitle": "VoteComment",    "name": "PostApiVoteVote_idCommentIdLike"  },  {    "type": "post",    "url": "/api/vote/:vote_id/comment/search",    "title": "Search API",    "group": "VoteComment",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:vote_id/comment/search"      }    ],    "error": {      "examples": [        {          "title": "voteComment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteCommentController.ts",    "groupTitle": "VoteComment",    "name": "PostApiVoteVote_idCommentSearch"  },  {    "type": "put",    "url": "/api/vote/:vote_id/comment/:id",    "title": "Update API",    "group": "VoteComment",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "comment",            "description": "<p>Comment</p>"          },          {            "group": "Request body",            "type": "number",            "size": "..1",            "allowedValues": [              "1",              "0",              "-1"            ],            "optional": false,            "field": "value",            "description": "<p>Value</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Update VoteComment Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:vote_id/comment/:id"      }    ],    "error": {      "examples": [        {          "title": "voteComment error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteCommentController.ts",    "groupTitle": "VoteComment",    "name": "PutApiVoteVote_idCommentId"  },  {    "type": "delete",    "url": "/api/vote/:id/like",    "title": "Delete Like API",    "group": "Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Like Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:id/like"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteController.ts",    "groupTitle": "Vote",    "name": "DeleteApiVoteIdLike"  },  {    "type": "get",    "url": "/api/relatetag/vote",    "title": "RelateTag Vote",    "group": "Vote",    "parameter": {      "examples": [        {          "title": "Input",          "content": "{\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"RelateTag Vote Successfully\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/relatetag/vote"      }    ],    "error": {      "examples": [        {          "title": "Vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/RelateTagController.ts",    "groupTitle": "Vote",    "name": "GetApiRelatetagVote"  },  {    "type": "get",    "url": "/api/vote/:id",    "title": "Find API",    "group": "Vote",    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Find Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:id"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteController.ts",    "groupTitle": "Vote",    "name": "GetApiVoteId"  },  {    "type": "get",    "url": "/api/vote/:id/count",    "title": "CommentCount API",    "group": "Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"CommentCount Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:id/count"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteController.ts",    "groupTitle": "Vote",    "name": "GetApiVoteIdCount"  },  {    "type": "get",    "url": "/api/vote/search/hot",    "title": "Hot API",    "group": "Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"FindHot Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/search/hot"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteController.ts",    "groupTitle": "Vote",    "name": "GetApiVoteSearchHot"  },  {    "type": "post",    "url": "/api/vote/:id/like",    "title": "Like API",    "group": "Vote",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isLike",            "description": "<p>Like</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Like Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/:id/like"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteController.ts",    "groupTitle": "Vote",    "name": "PostApiVoteIdLike"  },  {    "type": "post",    "url": "/api/vote/search",    "title": "Search API",    "group": "Vote",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "limit",            "description": "<p>limit</p>"          },          {            "group": "Request body",            "type": "number",            "optional": false,            "field": "offset",            "description": "<p>offset</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "select",            "description": "<p>select</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "relation",            "description": "<p>relation</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "whereConditions",            "description": "<p>whereConditions</p>"          },          {            "group": "Request body",            "type": "boolean",            "optional": false,            "field": "isCount",            "description": "<p>isCount (0=false, 1=true)</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Search Vote Successfully\",\n     \"data\":{\n     }\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/vote/search"      }    ],    "error": {      "examples": [        {          "title": "vote error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/VoteController.ts",    "groupTitle": "Vote",    "name": "PostApiVoteSearch"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "src/api/apidoc/main.js",    "group": "_Users_shiorin_web_sourceTree_git_web_ffp_newconsensus_git_newconsensus_api_src_api_apidoc_main_js",    "groupTitle": "_Users_shiorin_web_sourceTree_git_web_ffp_newconsensus_git_newconsensus_api_src_api_apidoc_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "src/public/apidoc/main.js",    "group": "_Users_shiorin_web_sourceTree_git_web_ffp_newconsensus_git_newconsensus_api_src_public_apidoc_main_js",    "groupTitle": "_Users_shiorin_web_sourceTree_git_web_ffp_newconsensus_git_newconsensus_api_src_public_apidoc_main_js",    "name": ""  },  {    "type": "get",    "url": "/api/media/bucket-object-list",    "title": "bucket-object-list",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Number",            "optional": false,            "field": "limit",            "description": "<p>list limit</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "folderName",            "description": "<p>Specific Folder Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"limit\" : \"\",\n     \"folderName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get bucket object list!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/bucket-object-list"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MediaController.ts",    "groupTitle": "media",    "name": "GetApiMediaBucketObjectList"  },  {    "type": "get",    "url": "/api/media/delete-file",    "title": "delete file API",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "fileName",            "description": "<p>File Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"fileName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Deleted file!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/delete-file"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MediaController.ts",    "groupTitle": "media",    "name": "GetApiMediaDeleteFile"  },  {    "type": "get",    "url": "/api/media/search-folder",    "title": "search Folder API",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "folderName",            "description": "<p>folderName</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"FolderName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully get Folder!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/search-folder"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MediaController.ts",    "groupTitle": "media",    "name": "GetApiMediaSearchFolder"  },  {    "type": "post",    "url": "/api/media/create-folder",    "title": "Create Folder",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "folderName",            "description": "<p>Specific Folder Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"folderName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Created folder!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/create-folder"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MediaController.ts",    "groupTitle": "media",    "name": "PostApiMediaCreateFolder"  },  {    "type": "post",    "url": "/api/media/delete-folder",    "title": "delete folder API",    "group": "media",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "folderName",            "description": "<p>Specific Folder Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n     \"folderName\" : \"\",\n}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n     \"message\": \"Successfully Deleted folder!\",\n     \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/delete-folder"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MediaController.ts",    "groupTitle": "media",    "name": "PostApiMediaDeleteFolder"  },  {    "type": "post",    "url": "/api/media/upload-file",    "title": "Upload File",    "group": "media",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "image",            "description": "<p>image</p>"          },          {            "group": "Request body",            "type": "String",            "optional": false,            "field": "path",            "description": "<p>Directory Name</p>"          }        ]      },      "examples": [        {          "title": "Input",          "content": "{\n  \"file\":\"\",\n  \"path\" : \"\",\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": ""          }        ]      }    },    "success": {      "examples": [        {          "title": "Success",          "content": "HTTP/1.1 200 OK\n{\n  \"message\": \"Successfully upload file\",\n  \"status\": \"1\"\n}",          "type": "json"        }      ]    },    "sampleRequest": [      {        "url": "/api/media/upload-file"      }    ],    "error": {      "examples": [        {          "title": "media error",          "content": "HTTP/1.1 500 Internal Server Error\n{\n    \"message\": \"Unable to upload file\",\n    \"status\": 0,\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "src/api/controllers/MediaController.ts",    "groupTitle": "media",    "name": "PostApiMediaUploadFile"  }]
